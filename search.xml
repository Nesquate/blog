<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Arch Linux GunPG 近期驗證遇到的問題</title>
    <url>/2020/08/11/arch-linux-gunpg-%E8%BF%91%E6%9C%9F%E9%A9%97%E8%AD%89%E9%81%87%E5%88%B0%E7%9A%84%E5%95%8F%E9%A1%8C/</url>
    <content><![CDATA[<p><img src="/post_image/2020/arch_linux-gpg-key-import-problem/image-01.png"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gpg: keyserver receive failed: No name</span><br></pre></td></tr></table></figure>

<p>其實在這個訊息跳出來之前，還有噴過另外一種訊息（但是很遺憾的是我沒有把它記錄下來，因為只是要在 Pacman-key 上指定 Keyserver 就解決了），原本想說忽略就好了，但是很不巧的連 <code>pacman-key --refresh-keys</code> 這個指令都會噴出上面這種訊息，讓我不得不重視這個問題。</p>
<p>後來經過測試的時候發現其實這是 Keyserver 的問題，之前噴其他奇怪的訊息的時候原本想說是 Key 的問題，不過現在的狀況完全推翻了以前的假設，看來就是 Keyserver 的問題了。</p>
<p>我後來換去 ubuntu 官方的 keyserver ( <a href="https://keyserver.ubuntu.com/">keyserver.ubuntu.com</a> )，如果 Arch Linux 預設的 Keyserver 沒壞掉，我現在也不用這麼辛苦…。</p>
<h2 id="更換方法"><a href="#更換方法" class="headerlink" title="更換方法"></a>更換方法</h2><p>總共要修改兩個檔案</p>
<ol>
<li><code>/etc/pacman.d/gnupg/gpg.conf</code><ul>
<li>這檔案 Pacman 驗證 Key 時會參考這個設定檔來處理</li>
</ul>
</li>
<li><code>~/.gnupg/gpg.conf</code><ul>
<li>這檔案會是其他非 root 程式（如 yay）在驗證時會參考這個檔案來處理</li>
</ul>
</li>
</ol>
<p>沒有 <code>~/.gnupg/gpg.conf</code> 就自己建立一個，不用怕，不會有事。 然後在兩個檔案都加入下面內容：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">keyserver keyserver.ubuntu.com</span><br></pre></td></tr></table></figure>

<p>存檔，下 <code>sudo pacman-key --refresh-keys</code> 跑跑看，沒啥問題就收工。</p>
<h2 id="786C63F330D7CB92-無法驗證的問題"><a href="#786C63F330D7CB92-無法驗證的問題" class="headerlink" title="786C63F330D7CB92 無法驗證的問題"></a>786C63F330D7CB92 無法驗證的問題</h2><p>這個我 <a href="https://forum.endeavouros.com/t/are-the-key-servers-down-for-anyone-else/6271/22">查了一下</a> 看起來只能自簽來解決。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman-key 786C63F330D7CB92 --lsign</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>系統維運</category>
      </categories>
      <tags>
        <tag>Arch Linux</tag>
        <tag>GPG</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>讓 Alert 音效徹底叫三聲</title>
    <url>/2019/09/20/c-%E8%AE%93-alert-%E9%9F%B3%E6%95%88%E5%BE%B9%E5%BA%95%E5%8F%AB%E4%B8%89%E8%81%B2/</url>
    <content><![CDATA[<p>計算機概論實習課時遇到的問題。</p>
<p>教授出了一個題目，要讓電腦Alert三次的音效聲，這題目看起來很簡單。原本的程式碼大概如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(2023/03/30 整理更: 程式碼在部落格搬遷中不見了...)</span><br></pre></td></tr></table></figure>

<p>但是電腦的運行速度真的是有夠快，這Alert三次很快就完成，所以實際上播出來的聲音就只有一次。</p>
<p>雖然助教在閱改的時候依然是算對，不過課堂上有不少人想要解決這個問題，不過後來都不試了。</p>
<p>我後來有查到一個方法，就給大家參考。</p>
<p>方法就是－<strong>加入 sleep() 函數</strong>。</p>
<p>加入 sleep () 函數之前要先引用標頭檔 windows.h (Windows) 或 unistd.h (Unix&#x2F;Linux)。</p>
<p>加上後來學到的while迴圈，於是程式碼就變成下列這樣：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(2023/03/30 整理更: 程式碼在部落格搬遷中不見了...)</span><br></pre></td></tr></table></figure>

<p>說明一下：</p>
<ul>
<li><p>建立兩個整數變數，time代表次數，sleeptime代表延遲時間</p>
</li>
<li><p>建立while迴圈，讓他alert響三次</p>
</li>
<li><p>time &lt; 4 代表 while 迴圈跑三次</p>
</li>
<li><p>sleep ( sleeptime ); - 指定延遲秒數</p>
</li>
<li><p>time &#x3D; time + 1; - 原本的次數加一次</p>
</li>
</ul>
<p>後來發現第三次的時候程式會延遲三秒才正式結束，為了解決這個問題，於是又對程式做了改寫：</p>
<p>程式碼意思就自己看了。</p>
<h3 id="後記：windows-h-的未解之謎"><a href="#後記：windows-h-的未解之謎" class="headerlink" title="後記：windows.h 的未解之謎"></a>後記：windows.h 的未解之謎</h3><p>一開始我是在實驗室的電腦使用 windows.h 的標頭檔來使用 sleep () 函數，發現可以正常運行。</p>
<p>於是後來就在自己的電腦上重現上述程式碼時就出現了幾個問題：</p>
<ul>
<li>Visual Studio 2019 打了之後會發生 sleep () 沒定義的狀況，後來去查了一下要用「Sleep ()」且「1000 &#x3D; 1 s」，這跟我的印象完全不一樣啊……</li>
<li>後來就把Dev C++裝上去並且測試一下使用 windows.h 的狀況，發現依舊是沒定義，再度問號</li>
<li>最後是用了 unistd.h 解決（沒想到Windows底下也可以用？）</li>
</ul>
<p>後來想起來實驗室的電腦有裝Code::Blocks，難道是跟Complier與Windows的環境變數（PATH）有關係嗎？這我目前還沒有答案……。</p>
]]></content>
      <categories>
        <category>程式撰寫</category>
      </categories>
      <tags>
        <tag>C</tag>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>Debian 從 sid 到 Experimental 到 Linux 6.0 RC</title>
    <url>/2022/10/10/debian-%E5%BE%9E-sid-%E5%88%B0-experimental-%E5%88%B0-linux-6-0-rc/</url>
    <content><![CDATA[<p>為了安裝 Linux 6.0 的紀錄。</p>
<p>這邊只介紹官方作法，也只推薦官方作法，因為單獨安裝首先會碰到套件依賴問題。由於 Debian 需要將更新頻道切換到 <code>experimental</code> 才可以安裝最新版的 Linux Kernel 6.0，且要使用 <code>experimental</code> 頻道之前系統必須要在 <code>sid</code> 更新頻道的狀態，等於說要切換兩次更新頻道。</p>
<p>首先先修改 <code>/etc/apt/source.list</code>，把 <code>bullseye</code> 換成 <code>sid</code>，只要改第一個 <code>deb</code> 和 <code>deb-src</code> 就好。</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">deb http://debian.cs.nctu.edu.tw/debian/ sid main</span><br><span class="line">deb-src http://debian.cs.nctu.edu.tw/debian/ sid main</span><br></pre></td></tr></table></figure>

<p>然後直接做系統全更新。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">apt update</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">apt full-upgrade</span></span><br></pre></td></tr></table></figure>

<p>讓 <code>apt</code> 把更新一次跑完後重開機，就會是 <code>sid</code> 更新頻道的狀態了。</p>
<p>接著再次修改 <code>/etc/apt/source.list</code>，把 <code>sid</code> 換成 <code>experimental</code>，同樣也是只要改第一個 <code>deb</code> 和 <code>deb-src</code>。</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">deb http://debian.cs.nctu.edu.tw/debian/ experimental main</span><br><span class="line">deb-src http://debian.cs.nctu.edu.tw/debian/ experimental main</span><br></pre></td></tr></table></figure>

<p>然後安裝最新版 Linux Kernel，截至本文時間 Debian 最新版本為 Linux 6.0-rc7。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">apt update</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">apt -t experimental install linux-image-6.0.0-rc7-amd64</span></span><br></pre></td></tr></table></figure>

<p><code>-t</code> 參數讓 <code>apt</code> 可以在指定的更新頻道上搜尋 or 安裝套件，雖然 Debian 官方 Wiki 上表示可以修改權重來達成以後都不需要帶入 <code>-t</code> 參數，但個人不建議，主要是因為 <code>experimental</code> 更新頻道比起 <code>sid</code> 更不穩定，隨時都會有系統爆炸的危險。</p>
<p>如果要搜尋到 <code>experimental</code> 更新頻道上的套件，那在下 <code>apt search</code> 的時候也要帶上 <code>-t</code> 參數。</p>
<h3 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h3><ul>
<li><a href="https://wiki.debian.org/DebianExperimental">DebianExperimental (Debian Wiki)</a></li>
</ul>
]]></content>
      <categories>
        <category>系統維運</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Debian</tag>
      </tags>
  </entry>
  <entry>
    <title>Escargot MSN Server - 私有MSN伺服器</title>
    <url>/2018/06/21/escargot-msn-server-%E7%A7%81%E6%9C%89msn%E4%BC%BA%E6%9C%8D%E5%99%A8/</url>
    <content><![CDATA[<p>最近發現了<a href="https://escargot.log1p.xyz/">Escargot MSN Server</a>這個MSN私有伺服器。 有鑑於MSN已經停止服務有4年之久（截至文章撰寫時），有人還願意提供服務是十分罕見的。 <img src="/post_image/2018/06/01-1.png" alt="01"> 伺服器網站已經寫明需要Windows Live Messenger 8.x以下才能使用。 找不到安裝檔？網站底下有，還有Messenger Plus!呢。 帳號部分需要另外註冊， 若要在MSN Messenger 4以下使用需勾選「Old MSN support」（不安全）。 即使是Patched的MSN Messenger還是無法與較新的原版共存囉～ 全部弄好之後，熟悉的MSN又回來啦！ <img src="/post_image/2018/06/02-1.png" alt="02"></p>
]]></content>
      <categories>
        <category>網路服務</category>
      </categories>
      <tags>
        <tag>MSN</tag>
        <tag>Server</tag>
        <tag>Windows Live Messenger</tag>
      </tags>
  </entry>
  <entry>
    <title>Git 遠端儲存庫強制蓋台</title>
    <url>/2022/10/12/git-%E9%81%A0%E7%AB%AF%E5%84%B2%E5%AD%98%E5%BA%AB%E5%BC%B7%E5%88%B6%E8%93%8B%E5%8F%B0/</url>
    <content><![CDATA[<p>稍微記錄一下不然之後又忘記。</p>
<p>原本 <code>im-nex.one</code> 是用 Hugo 靜態網頁產生器去做首頁，後來部落格決定搬來這位置之後，就想說把原本的 Hugo 蓋掉。</p>
<p>但是我沒有先把儲存庫先 Clone 下來，所以有點麻煩。</p>
<p>一開始我天真浪漫想說，阿就 <code>git clone --no-checkout</code> 就好了，這也是<a href="https://stackoverflow.com/questions/38999901/clone-only-the-git-directory-of-a-git-repo">一開始找到的解法</a>。</p>
<p>但是很快就遇到非空資料夾的問題 (Git 不允許在有資料的資料夾內 Clone Git 儲存庫)，所以後來參考了<a href="https://stackoverflow.com/questions/2411031/how-do-i-clone-into-a-non-empty-directory">另外一種解法</a>。</p>
<p>自己的版本如下:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">先初始化本地的 Git 儲存庫</span></span><br><span class="line">git init</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">記得要蓋台分支名稱要跟遠端儲存庫上的一致，否則在 push 階段要手動指定</span></span><br><span class="line">git branch -m main</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">新增遠端儲存庫</span></span><br><span class="line">git remote add origin &lt;remote_url&gt;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">然後把遠端儲存庫先抓下來，但不合併或 checkout</span></span><br><span class="line">git fetch</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 然後就是做各種 commit 等操作，最後上傳的時候要加上 `-f` 參數</span></span></span><br><span class="line">git push --set-upstream orign -f</span><br></pre></td></tr></table></figure>

<p>這樣就強制蓋台成功了，不過強制蓋台意味著上面原本的資料也會不見，所以請先做好備份。</p>
]]></content>
      <categories>
        <category>程式撰寫</category>
      </categories>
      <tags>
        <tag>Git</tag>
        <tag>版本控制</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML 學習記錄  HTML 標籤及屬性</title>
    <url>/2018/01/04/html-learming-html-label/</url>
    <content><![CDATA[<span id="more"></span>
<p>以下統整可以使用的HTML標籤及屬性筆記，往後文章依舊。</p>
<h3 id="標籤"><a href="#標籤" class="headerlink" title="標籤"></a><html>標籤</h3><p>標籤</p>
<p>說明</p>
<p>lang</p>
<p>表示網頁的所使用的語系。 在Chrome中，網頁語言與當前語言不同時，會跳出翻譯工具， 可做為該程式碼的測試現象。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;html lang=&quot;zh&quot;&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<h3 id="標籤-1"><a href="#標籤-1" class="headerlink" title="標籤"></a><meta>標籤</h3><p>標籤</p>
<p>說明</p>
<p>charset</p>
<p>表示網頁所使用的字元集。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;meta charset=&quot;UTF-8&quot;&gt;</span><br></pre></td></tr></table></figure>

<p>name content</p>
<p>name表示要描述的網頁特性項目； content表示此項目的內容說明。 SEO時常見。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;meta name&quot;keywords&quot; content=&quot;PC,Hardware&quot;&gt;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>程式撰寫</category>
      </categories>
      <tags>
        <tag>學習</tag>
        <tag>描述資訊</tag>
      </tags>
  </entry>
  <entry>
    <title>iPad 鎖定螢幕後 Wi-Fi 會自動斷線的鬼故事</title>
    <url>/2023/04/19/ipad-%E9%8E%96%E5%AE%9A%E8%9E%A2%E5%B9%95%E5%BE%8C-wi-fi-%E6%9C%83%E8%87%AA%E5%8B%95%E6%96%B7%E7%B7%9A%E7%9A%84%E9%AC%BC%E6%95%85%E4%BA%8B/</url>
    <content><![CDATA[<p>自從 3 月買了 iPad 之後，就一直發生很奇怪的事情－Wi-Fi 在鎖定螢幕之後自動斷線。 </p>
<p>起初以為是 iPadOS 本身的機制，我也以為這是 iPad 省電神話的其中一部份。但後來想想不太對，畢竟隔壁棚的 iPhone 沒有聽過有人有類似的問題。 </p>
<p>而且更奇怪的事情是，iPad 在學校連上學校的 Wi-Fi 竟然沒有發生鎖定螢幕後斷線的問題，於是決定去找看看是不是 RouterOS 的問題。 </p>
<p>於是找到了 <a href="https://forum.mikrotik.com/viewtopic.php?t=111359">MikroTik 官方論壇的討論串</a>，有人提出了很有意思的回答：</p>
<blockquote>
<p>What’s your DHCP lease time? Maybe it’s too low? If I recall correctly iOS doesn’t like very low DHCP lease times. You could raise the “Group Key Update” of your Security Profile to something like 1h. This should only be relevant to WPA2-EAP (as far as I know), but might be worth a try.</p>
</blockquote>
<p>跟我發生類似事情的事主於是回答：</p>
<blockquote>
<p>I haven’t changed anything in lease time for ages. It is set up to 00:10:00. As it comes to “Group Key Update” I can’t see anything like that at CAPsMAN… When APs were working separately it was set up to 00:05:00.</p>
</blockquote>
<p>先不管 CAPsMAN，我沒有搞這個，且我也沒有搞 WPA2-EAP，那問題就只剩下一個－DHCP lease time。 </p>
<p>於是我去確定了一下 DHCP Server lease time，哇怎麼只有 10 分鐘……。 </p>
<p>後來改成 23 小時，讓 iPad 放一個晚上，隔天醒來看，沒有自動斷線，看來問題就出在這裡。 </p>
<p>我開始好奇 Apple 到底有沒有對 iPad 的 DHCP lease time 設定下限或上限，於是找到了 <a href="https://support.apple.com/en-md/HT202068">Recommended settings for Wi-Fi routers and access points</a> 一文，並指出：</p>
<blockquote>
<p>DHCP lease time Set to 8 hours for home or office networks; 1 hour for hotspots or guest networks DHCP lease time is the length of time that an IP address assigned to a device is reserved for that device. Wi-Fi routers usually have a limited number of IP addresses that they can assign to devices on the network. If that number is depleted, the router can’t assign IP addresses to new devices, preventing those devices from communicating with other devices on the network and internet. Reducing DHCP lease time allows the router to more quickly reclaim and reassign old IP addresses that are no longer being used.</p>
</blockquote>
<p>看來 Lease time 只要設定 8 小時就好了，於是又改成 8 小時，目前沒有發生斷線狀況，不過還要再觀察看看……。</p>
]]></content>
      <categories>
        <category>系統維運</category>
      </categories>
      <tags>
        <tag>iPad</tag>
        <tag>Wi-Fi</tag>
      </tags>
  </entry>
  <entry>
    <title>Kagi 3/15 號後要執行的付費方案變更</title>
    <url>/2023/03/09/kagi-3-15-%E8%99%9F%E5%BE%8C%E8%A6%81%E5%9F%B7%E8%A1%8C%E7%9A%84%E4%BB%98%E8%B2%BB%E6%96%B9%E6%A1%88%E8%AE%8A%E6%9B%B4/</url>
    <content><![CDATA[<p>才剛訂 Kagi 10 鎂無限搜尋方案不到一個月，官方說要改付費方案了…時間真不巧 XD（3&#x2F;15 起更動）</p>
<p>免費搜尋額度:</p>
<ul>
<li>Free 50-&gt;100</li>
<li>5 鎂是新增的方案，免費 200 次</li>
<li>10 鎂 無限 -&gt; 免費 700 次</li>
<li>25 鎂也是新的方案，這才是真的無限，其他服務會有優惠（？</li>
</ul>
<p><img src="/post_image/2023/kagi-change/plans.png"></p>
<p>超過免費額度每搜尋一次 1.5 分（沒搞錯應該是 0.0015 鎂&#x2F;次 搞錯了，小數點後多一個0），好像繼續維持 10 鎂也夠用，畢竟這樣算的話要每搜尋超過 1000 次才會多 1.5 鎂（更正：100 次會多 1.5 鎂），希望我的度量衡認知不要雷到我</p>
<p>舊版的方案會繼續到過期為止</p>
<p>有趣的是 Kagi 在 <a href="https://blog.kagi.com/update-kagi-search-pricing">Blog 文章</a> 說到 “99% of users search less than 200 times a month”（還附上來源），我還以為隨隨便便都超過 200 次（像我直到現在就已經 361 次搜尋了）</p>
<p>在 Blog 文章還有提到家庭方案、之後要推動的生成式 AI 搜尋，這不在我感興趣的範圍，就沒多研究了（雖然同一篇文章都有講到）</p>
]]></content>
      <categories>
        <category>網路服務</category>
      </categories>
      <tags>
        <tag>Kagi</tag>
        <tag>搜尋引擎</tag>
      </tags>
  </entry>
  <entry>
    <title>Minecraft Fabric Server Mod 開發筆記 - (1) Mod 生命週期</title>
    <url>/2022/07/28/minecraft-fabric-server-mod-%E9%96%8B%E7%99%BC%E7%AD%86%E8%A8%98-1-mod-%E7%94%9F%E5%91%BD%E9%80%B1%E6%9C%9F/</url>
    <content><![CDATA[<p>Fabric API 新版 Lifecycle 的幾個比較重要的生命週期（依照 <code>println()</code> （Kotlin) 印出結果來記錄）</p>
<ul>
<li><code>ServerLifecycleEvents.SERVER_STARTING</code>:<ul>
<li>發生在 “Starting minecraft server version xxx” 之前，在 Fabric Loader 載入之後</li>
<li>官方在相關 class 檔案內的註解為在 <code>PlayerManager</code> 載入之前 (<code>PlayerManager</code> 用來載入 OP、黑白名單等玩家相關名單)</li>
<li>猜測適用於自訂方塊載入、可能對存檔內容初始化有影響的內容</li>
</ul>
</li>
<li><code>ServerLifecycleEvents.SERVER_STARTED</code>:<ul>
<li>發生在 “Done (x.xxxs)! For help, type “help””之後</li>
<li>官方表示此時存檔已經載入完畢</li>
<li>猜測適用於管理玩家、存檔後續設定、網路相關服務的啟動等內容</li>
</ul>
</li>
<li><code>ServerLifecycleEvents.SERVER_STOPPING</code>:<ul>
<li>在觸發 <code>/stop</code> 指令後的瞬間發生</li>
<li>官方表示此時網路連線並未中斷，存檔、玩家資料等仍可以進行操作</li>
<li>猜測適用於停止網路相關服務、針對伺服器停止時玩家的行為等內容</li>
</ul>
</li>
<li><code>ServerLifecycleEvents.SERVER_STOPPED</code>:<ul>
<li>發生於存檔已經儲存完畢之時</li>
<li>官方表示此時存檔、玩家資料等已經無法再存取</li>
<li>猜測適用於非常底層的卸載動作</li>
</ul>
</li>
<li><code>(不在任何生命週期內)</code><ul>
<li>發生於 datafixer 載入後的瞬間</li>
<li>目前我還不知道這週期可以做什麼</li>
</ul>
</li>
</ul>
<p><code>onInitialize()</code> 的程式碼：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onInitialize</span><span class="params">()</span></span> &#123;</span><br><span class="line">        ServerLifecycleEvents.SERVER_STARTING.register &#123; server: MinecraftServer -&gt;</span><br><span class="line">            println(<span class="string">&quot;Happened on server starting&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        ServerLifecycleEvents.SERVER_STARTED.register &#123; server: MinecraftServer -&gt;</span><br><span class="line">            println(<span class="string">&quot;Happened on server started&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        ServerLifecycleEvents.SERVER_STOPPING.register &#123; server: MinecraftServer -&gt;</span><br><span class="line">            println(<span class="string">&quot;Happened on server stopping&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        ServerLifecycleEvents.SERVER_STOPPED.register &#123; server: MinecraftServer -&gt;</span><br><span class="line">            println(<span class="string">&quot;Happened on server stopped&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        println(<span class="string">&quot;Hello world!&quot;</span>)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>輸出結果:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[14:00:14] [main/INFO] (FabricLoader/GameProvider) Loading Minecraft 1.19 with Fabric Loader 0.14.8</span><br><span class="line">[14:00:14] [main/INFO] (FabricLoader) Loading 37 mods:</span><br><span class="line">    - dimmanager 0.1.0</span><br><span class="line">    - fabric 0.58.0+1.19</span><br><span class="line">    - fabric-api-base 0.4.9+e62f51a3a9</span><br><span class="line">    - fabric-api-lookup-api-v1 1.6.7+9ff28f40a9</span><br><span class="line">    - fabric-biome-api-v1 9.0.14+b2a4a624a9</span><br><span class="line">    - fabric-command-api-v2 2.1.2+0d55f585a9</span><br><span class="line">    - fabric-content-registries-v0 3.2.1+07df213ea9</span><br><span class="line">    - fabric-convention-tags-v1 1.0.8+37622d24a9</span><br><span class="line">    - fabric-crash-report-info-v1 0.2.3+bd0a0d4aa9</span><br><span class="line">    - fabric-data-generation-api-v1 5.1.2+a680b9b4a9</span><br><span class="line">    - fabric-dimensions-v1 2.1.28+a6d2f785a9</span><br><span class="line">    - fabric-entity-events-v1 1.4.16+9ff28f40a9</span><br><span class="line">    - fabric-events-interaction-v0 0.4.26+9ff28f40a9</span><br><span class="line">    - fabric-game-rule-api-v1 1.0.19+18990361a9</span><br><span class="line">    - fabric-gametest-api-v1 1.0.33+e62f51a3a9</span><br><span class="line">    - fabric-item-api-v1 1.5.5+35a03c43a9</span><br><span class="line">    - fabric-item-groups-v0 0.3.26+9ff28f40a9</span><br><span class="line">    - fabric-language-kotlin 1.8.2+kotlin.1.7.10</span><br><span class="line">    - fabric-lifecycle-events-v1 2.1.0+33fbc738a9</span><br><span class="line">    - fabric-loot-api-v2 1.1.1+03a4e568a9</span><br><span class="line">    - fabric-message-api-v1 1.0.1+513f4a59a9</span><br><span class="line">    - fabric-mining-level-api-v1 2.1.11+33fbc738a9</span><br><span class="line">    - fabric-networking-api-v1 1.1.0+442de8b8a9</span><br><span class="line">    - fabric-object-builder-api-v1 4.0.8+9ff28f40a9</span><br><span class="line">    - fabric-particles-v1 1.0.8+dc39553aa9</span><br><span class="line">    - fabric-registry-sync-v0 0.9.18+23c4cfefa9</span><br><span class="line">    - fabric-rendering-data-attachment-v1 0.3.12+9ff28f40a9</span><br><span class="line">    - fabric-rendering-fluids-v1 3.0.5+9ff28f40a9</span><br><span class="line">    - fabric-resource-conditions-api-v1 2.0.9+e62f51a3a9</span><br><span class="line">    - fabric-resource-loader-v0 0.5.6+5f1a85e0a9</span><br><span class="line">    - fabric-screen-handler-api-v1 1.2.7+9ff28f40a9</span><br><span class="line">    - fabric-transfer-api-v1 2.0.9+e62f51a3a9</span><br><span class="line">    - fabric-transitive-access-wideners-v1 1.1.1+9e7660c6a9</span><br><span class="line">    - fabricloader 0.14.8</span><br><span class="line">    - fantasy 0.4.5+1.19</span><br><span class="line">    - java 17</span><br><span class="line">    - minecraft 1.19</span><br><span class="line">[14:00:14] [main/INFO] (FabricLoader/Mixin) SpongePowered MIXIN Subsystem Version=0.8.5 Source=file:/home/nesquate/.gradle/caches/modules-2/files-2.1/net.fabricmc/sponge-mixin/0.11.4+mixin.0.8.5/c1dc27696aa4006e492c2485c9ccbcb26045a971/sponge-mixin-0.11.4+mixin.0.8.5.jar Service=Knot/Fabric Env=SERVER</span><br><span class="line">[14:00:15] [main/INFO] (FabricLoader/Mixin) Loaded Fabric development mappings for mixin remapper!</span><br><span class="line">[14:00:15] [main/INFO] (FabricLoader/Mixin) Compatibility level set to JAVA_16</span><br><span class="line">[14:00:15] [main/INFO] (FabricLoader/Mixin) Compatibility level set to JAVA_17</span><br><span class="line">[14:00:16] [main/WARN] (FileUtil) Configuration conflict: there is more than one oshi.properties file on the classpath</span><br><span class="line">[14:00:16] [main/WARN] (FileUtil) Configuration conflict: there is more than one oshi.architecture.properties file on the classpath</span><br><span class="line">[14:00:19] [main/INFO] (Minecraft) Building unoptimized datafixer</span><br><span class="line">[14:00:22] [main/INFO] (Minecraft) [STDOUT]: Hello world!</span><br><span class="line">[14:00:22] [main/INFO] (Minecraft) Environment: authHost=&#x27;https://authserver.mojang.com&#x27;, accountsHost=&#x27;https://api.mojang.com&#x27;, sessionHost=&#x27;https://sessionserver.mojang.com&#x27;, servicesHost=&#x27;https://api.minecraftservices.com&#x27;, name=&#x27;PROD&#x27;</span><br><span class="line">[14:00:24] [main/INFO] (Minecraft) Loaded 7 recipes</span><br><span class="line">[14:00:25] [main/INFO] (Minecraft) Loaded 1179 advancements</span><br><span class="line">[14:00:26] [main/INFO] (BiomeModificationImpl) Applied 0 biome modifications to 0 of 63 new biomes in 3.226 ms</span><br><span class="line">[14:00:26] [Server thread/INFO] (Minecraft) [STDOUT]: Happened on server starting</span><br><span class="line">[14:00:26] [Server thread/INFO] (Minecraft) Starting minecraft server version 1.19</span><br><span class="line">[14:00:26] [Server thread/INFO] (Minecraft) Loading properties</span><br><span class="line">[14:00:26] [Server thread/INFO] (Minecraft) Default game type: SURVIVAL</span><br><span class="line">[14:00:26] [Server thread/INFO] (Minecraft) Generating keypair</span><br><span class="line">[14:00:26] [Server thread/INFO] (Minecraft) Starting Minecraft server on *:25565</span><br><span class="line">[14:00:26] [Server thread/INFO] (Minecraft) Using epoll channel type</span><br><span class="line">[14:00:26] [Server thread/INFO] (Minecraft) Preparing level &quot;world&quot;</span><br><span class="line">[14:00:26] [Server thread/INFO] (Minecraft) Preparing start region for dimension minecraft:overworld</span><br><span class="line">[14:00:30] [Worker-Main-1/INFO] (Minecraft) Preparing spawn area: 0%</span><br><span class="line">[14:00:30] [Worker-Main-5/INFO] (Minecraft) Preparing spawn area: 0%</span><br><span class="line">[14:00:30] [Worker-Main-5/INFO] (Minecraft) Preparing spawn area: 0%</span><br><span class="line">[14:00:30] [Worker-Main-1/INFO] (Minecraft) Preparing spawn area: 0%</span><br><span class="line">[14:00:30] [Worker-Main-4/INFO] (Minecraft) Preparing spawn area: 0%</span><br><span class="line">[14:00:30] [Worker-Main-1/INFO] (Minecraft) Preparing spawn area: 0%</span><br><span class="line">[14:00:30] [Worker-Main-1/INFO] (Minecraft) Preparing spawn area: 0%</span><br><span class="line">[14:00:30] [Worker-Main-1/INFO] (Minecraft) Preparing spawn area: 0%</span><br><span class="line">[14:00:30] [Worker-Main-3/INFO] (Minecraft) Preparing spawn area: 31%</span><br><span class="line">[14:00:31] [Worker-Main-4/INFO] (Minecraft) Preparing spawn area: 93%</span><br><span class="line">[14:00:31] [Server thread/INFO] (Minecraft) Time elapsed: 4557 ms</span><br><span class="line">[14:00:31] [Server thread/INFO] (Minecraft) Done (4.925s)! For help, type &quot;help&quot;</span><br><span class="line">[14:00:31] [Server thread/INFO] (Minecraft) [STDOUT]: Happened on server started</span><br><span class="line">stop</span><br><span class="line">[14:08:03] [Server thread/INFO] (Minecraft) Stopping the server</span><br><span class="line">[14:08:03] [Server thread/INFO] (Minecraft) [STDOUT]: Happened on server stopping</span><br><span class="line">[14:08:03] [Server thread/INFO] (Minecraft) Stopping server</span><br><span class="line">[14:08:03] [Server thread/INFO] (Minecraft) Saving players</span><br><span class="line">[14:08:03] [Server thread/INFO] (Minecraft) Saving worlds</span><br><span class="line">[14:08:04] [Server thread/INFO] (Minecraft) Saving chunks for level &#x27;ServerLevel[world]&#x27;/minecraft:overworld</span><br><span class="line">[14:08:05] [Server thread/INFO] (Minecraft) Saving chunks for level &#x27;ServerLevel[world]&#x27;/minecraft:the_end</span><br><span class="line">[14:08:05] [Server thread/INFO] (Minecraft) Saving chunks for level &#x27;ServerLevel[world]&#x27;/minecraft:the_nether</span><br><span class="line">[14:08:05] [Server thread/INFO] (Minecraft) ThreadedAnvilChunkStorage (world): All chunks are saved</span><br><span class="line">[14:08:05] [Server thread/INFO] (Minecraft) ThreadedAnvilChunkStorage (DIM1): All chunks are saved</span><br><span class="line">[14:08:05] [Server thread/INFO] (Minecraft) ThreadedAnvilChunkStorage (DIM-1): All chunks are saved</span><br><span class="line">[14:08:05] [Server thread/INFO] (Minecraft) ThreadedAnvilChunkStorage: All dimensions are saved</span><br><span class="line">[14:08:05] [Server thread/INFO] (Minecraft) [STDOUT]: Happened on server stopped</span><br></pre></td></tr></table></figure>

<p>了解這些生命週期可以讓我順利取得 Server 的實體，以便進行後續的 Coding。</p>
]]></content>
      <categories>
        <category>Minecraft</category>
      </categories>
      <tags>
        <tag>Fabric</tag>
        <tag>Minecraft</tag>
      </tags>
  </entry>
  <entry>
    <title>Minecraft 改存檔名稱，請留意一下 level.dat...</title>
    <url>/2022/07/31/minecraft-%E6%94%B9%E5%AD%98%E6%AA%94%E5%90%8D%E7%A8%B1%EF%BC%8C%E8%AB%8B%E7%95%99%E6%84%8F%E4%B8%80%E4%B8%8B-level-dat/</url>
    <content><![CDATA[<p>會有這問題，主要是因為我經營的伺服器所使用的 <a href="https://github.com/Xujiayao/MCDiscordChat">MCDiscordChat</a> 在我更改存檔資料夾的名稱之後經常噴錯：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[01:13:37] [Timer-2/ERROR]: Uncaught exception in thread &quot;Timer-2&quot;</span><br><span class="line">java.io.UncheckedIOException: RealmsMain/stats</span><br><span class="line">    at org.apache.commons.io.FileUtils.listFiles(FileUtils.java:2153) ~[commons-io-2.11.0.jar:?]</span><br><span class="line">    at top.xujiayao.mcdiscordchat.utils.Utils$2.run(Utils.java:255) ~[MCDiscordChat-1.19-2.0.0-alpha.5.jar:?]</span><br><span class="line">    at java.util.TimerThread.mainLoop(Unknown Source) ~[?:?]</span><br><span class="line">    at java.util.TimerThread.run(Unknown Source) ~[?:?]</span><br><span class="line">Caused by: java.nio.file.NoSuchFileException: RealmsMain/stats</span><br><span class="line">    at sun.nio.fs.UnixException.translateToIOException(Unknown Source) ~[?:?]</span><br><span class="line">    at sun.nio.fs.UnixException.rethrowAsIOException(Unknown Source) ~[?:?]</span><br><span class="line">    at sun.nio.fs.UnixException.rethrowAsIOException(Unknown Source) ~[?:?]</span><br><span class="line">    at sun.nio.fs.UnixFileAttributeViews$Basic.readAttributes(Unknown Source) ~[?:?]</span><br><span class="line">    at sun.nio.fs.UnixFileSystemProvider.readAttributes(Unknown Source) ~[?:?]</span><br><span class="line">    at sun.nio.fs.LinuxFileSystemProvider.readAttributes(Unknown Source) ~[?:?]</span><br><span class="line">    at java.nio.file.Files.readAttributes(Unknown Source) ~[?:?]</span><br><span class="line">    at java.nio.file.FileTreeWalker.getAttributes(Unknown Source) ~[?:?]</span><br><span class="line">    at java.nio.file.FileTreeWalker.visit(Unknown Source) ~[?:?]</span><br><span class="line">    at java.nio.file.FileTreeWalker.walk(Unknown Source) ~[?:?]</span><br><span class="line">    at java.nio.file.FileTreeIterator.&lt;init&gt;(Unknown Source) ~[?:?]</span><br><span class="line">    at java.nio.file.Files.walk(Unknown Source) ~[?:?]</span><br><span class="line">    at org.apache.commons.io.file.PathUtils.walk(PathUtils.java:1044) ~[commons-io-2.11.0.jar:?]</span><br><span class="line">    at org.apache.commons.io.FileUtils.streamFiles(FileUtils.java:2971) ~[commons-io-2.11.0.jar:?]</span><br><span class="line">    at org.apache.commons.io.FileUtils.listFiles(FileUtils.java:2151) ~[commons-io-2.11.0.jar:?]</span><br><span class="line">    ... 3 more</span><br></pre></td></tr></table></figure>

<p>雖然不影響伺服器啟動過程，但有點礙眼。</p>
<p>奇怪，我明明就把存檔名稱從 <code>RealmsMain</code> 改叫做 <code>Main</code> 了，怎麼還跑去找 <code>RealmsMain</code>？</p>
<p>根據 Exception 訊息，跑去看 <code>top.xujiayao.mcdiscordchat.utils.Utils</code> 的第 255 行左右的程式碼，內容是這樣的：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">topic</span> <span class="operator">=</span> TEXTS.onlineChannelTopic()</span><br><span class="line">                        .replace(<span class="string">&quot;%onlinePlayerCount%&quot;</span>, Integer.toString(SERVER.getPlayerManager().getPlayerList().size()))</span><br><span class="line">                        .replace(<span class="string">&quot;%maxPlayerCount%&quot;</span>, Integer.toString(SERVER.getPlayerManager().getMaxPlayerCount()))</span><br><span class="line">                        <span class="comment">//#if MC &gt;= 11600</span></span><br><span class="line">                        .replace(<span class="string">&quot;%uniquePlayerCount%&quot;</span>, Integer.toString(FileUtils.listFiles(<span class="keyword">new</span> <span class="title class_">File</span>((SERVER.getSaveProperties().getLevelName() + <span class="string">&quot;/stats/&quot;</span>)), <span class="literal">null</span>, <span class="literal">false</span>).size()))</span><br><span class="line">                        <span class="comment">//#else</span></span><br><span class="line">                        <span class="comment">//$$ .replace(&quot;%uniquePlayerCount%&quot;, Integer.toString(FileUtils.listFiles(new File((SERVER.getLevelName() + &quot;/stats/&quot;)), null, false).size()))</span></span><br><span class="line">                        <span class="comment">//#endif</span></span><br><span class="line">                        .replace(<span class="string">&quot;%serverStartedTime%&quot;</span>, SERVER_STARTED_TIME)</span><br><span class="line">                        .replace(<span class="string">&quot;%lastUpdateTime%&quot;</span>, Long.toString(Instant.now().getEpochSecond()));</span><br></pre></td></tr></table></figure>

<p>其中第 255 行為：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Integer.toString(FileUtils.listFiles(<span class="keyword">new</span> <span class="title class_">File</span>((SERVER.getSaveProperties().getLevelName() + <span class="string">&quot;/stats/&quot;</span>)), <span class="literal">null</span>, <span class="literal">false</span>).size()))</span><br></pre></td></tr></table></figure>

<p><code>SERVER</code> 是 <code>MinecraftServer</code> 類別的實體，所以可以斷言 <code>getSaveProperties()</code> 以及其底下的 <code>getLevelName()</code> 都是原生 Minecraft 的 API，應該不是 Mod 作者的鍋。</p>
<p>後來直接往 NBT 資訊有存檔名稱的方向猜，打開 level.dat，果然還真的猜對了…</p>
<p><img src="/post_image/2022/minecraft-world-change-name-level.dat/image-01.png"></p>
<p>停機改掉之後再開啟，就沒再跳錯誤了。</p>
]]></content>
      <categories>
        <category>Minecraft</category>
      </categories>
      <tags>
        <tag>Minecraft</tag>
        <tag>level.dat</tag>
      </tags>
  </entry>
  <entry>
    <title>Sony Xperia XZ Premium DRM FIX手動套用方法</title>
    <url>/2018/04/15/sony-xepria-xz-premium-drm-fix-apply-manual/</url>
    <content><![CDATA[<p>XZP的DRM FIX在<a href="https://forum.xda-developers.com/xz-premium/development/hack-mod-sony-xperia-xz-premium-twrp-t3695171">XDA</a>已經推出許久，最近的DRM FIX v2.x版本甚至把Kernel部分獨立成一個刷機包來安裝。 獨立刷機包的好處在於往後有新官方Kernel釋出時，只要放置適當的檔案和刷入刷機包即可套用DRM FIX。以前還要等sToRm&#x2F;&#x2F;打包Kernel，一來相當費時，其次是等待期間的新系統舊Kernel之組合會使得安全性更新的修補不完全。 目前的v2.2的一鍵DRM FIX只支援到47.1.A.12.75，但原廠系統已經來到47.1.A.12.119(TW、HK等)&#x2F;47.1.A.12.145(大部分)，程式在手機fastboot偵測下去果然是無法支援的，不過我們可以利用獨立刷機包的特性來完成手動DRM FIX。</p>
<span id="more"></span>
<p>步驟：</p>
<ol>
<li>至<a href="https://www.xperifix.com/download/xperifix-latest/">XperiFIX</a>下載v1.4和v2.2，<strong>然後先安裝v1.4再安裝v2.2</strong>（反過來裝好像也可以？沒試過）</li>
<li>複製檔案到手機（TWRP下的MTP有點問題，不要在TWRP下複製，這部分是Myself5的鍋）<ol>
<li>XperiFIXDATAXZPG814247.1.A.8.49底下的drmpatch.zip （非台版就在XperiFIXDATAXZPG814147.1.A.8.49底下）</li>
<li>XperiFIXDATADRM底下的xperifix.zip</li>
</ol>
</li>
<li>用fastboot刷TWRP（指令：fastboot flash recovery xxx.img） 在XperiFIXDATATWRP底下有，<strong>請注意是刷xzp-twrp.img而非 xzp-twrptemp.img</strong> <strong>請先裝好fastboot驅動和fastboot再來</strong></li>
<li>在TWRP下刷入drmpatch.zip和xperifix.zip（無先後順序問題）</li>
<li>重開機，enjoy!</li>
</ol>
<p>但是既然都做成刷機包了，難道不能把drmfix.so和drmfuck.so一起包進去嘛？非得要去載舊版才行？</p>
]]></content>
      <categories>
        <category>系統維運</category>
      </categories>
      <tags>
        <tag>DRM FIX</tag>
        <tag>XperiFIX</tag>
        <tag>XZP</tag>
      </tags>
  </entry>
  <entry>
    <title>Termux SSH 連線二三事</title>
    <url>/2020/02/24/termux-ssh-%E9%80%A3%E7%B7%9A%E4%BA%8C%E4%B8%89%E4%BA%8B/</url>
    <content><![CDATA[<h2 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h2><p>安裝其實不難， <code>pkg install openssh</code> 或 <code>apt install openssh</code> 就好了。 然而其實也不用再做而外的設定，預設就是 <strong>密碼</strong> 和 <strong>私鑰</strong> 兩種都有開。</p>
<p>如果只是要用密碼登入，再輸入 <code>passwd</code> 指定密碼就可以了； 如果是要用私鑰登入，請繼續往下看。</p>
<p>(登入的部分也往下看)</p>
<h2 id="私鑰登入"><a href="#私鑰登入" class="headerlink" title="私鑰登入"></a>私鑰登入</h2><p>稍微整理了一下，流程大概是：</p>
<h3 id="產生私鑰"><a href="#產生私鑰" class="headerlink" title="產生私鑰"></a>產生私鑰</h3><p>這部分只要打 <code>ssh-keygen</code> 就好了</p>
<h3 id="信任私鑰"><a href="#信任私鑰" class="headerlink" title="信任私鑰"></a>信任私鑰</h3><p>這邊打以下指令就好</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</span><br><span class="line"><span class="built_in">chmod</span> 600 ~/.ssh/authorized_keys</span><br><span class="line"><span class="built_in">chmod</span> 700 ~/.ssh</span><br></pre></td></tr></table></figure>

<p>這樣私鑰的部分就解決了。你可以把 <code>id_rsa.pub</code> 和 <code>id_rsa</code> 複製到電腦上。 如果有 root 的話這邊應該是沒什麼問題，如果沒有的話…自己想辦法複製到 <code>/sdcard</code> 上 (用指令)。</p>
<h2 id="登入"><a href="#登入" class="headerlink" title="登入"></a>登入</h2><p>登入有幾個要注意的事情：</p>
<ol>
<li>Termux 的 SSH Port 為 <strong>8022</strong> ，沒錯不是 22 ，這讓我一度以為自己的設定哪裡有問題。</li>
<li>注意網路環境，有些網路環境會把所有的 Port 鎖光光。</li>
</ol>
<p>登入之前只要先在 Termux 輸入 <code>sshd</code> 最後再用相關軟體登入就好了 (這裡使用 MobaXterm)</p>
<p><img src="/post_image/2020/termux-ssh/termux-ssh-mobaxterm.png"></p>
<p>如果要停止 SSH 服務，只要輸入 <code>pkill sshd</code> 就行； 如果要在啟動 Termux 時自動啟動 SSH 服務，請善用 Shell 的設定檔，如 bash 的 <code>.bashrc</code> 或 zsh 的 <code>.zshrc</code> 。</p>
<h2 id="參考來源"><a href="#參考來源" class="headerlink" title="參考來源"></a>參考來源</h2><ul>
<li><a href="http://blog.lujun9972.win/blog/2018/01/24/%E4%BD%BF%E7%94%A8termux%E6%8A%8Aandroid%E6%89%8B%E6%9C%BA%E5%8F%98%E6%88%90ssh%E6%9C%8D%E5%8A%A1%E5%99%A8/">使用Termux把Android手机变成SSH服务器 - 暗无天日</a></li>
<li><a href="https://www.arthurtoday.com/2017/04/termux-install-and-config-ssh-server.html">Termux 設定SSH Server - 阿舍的隨手記記、隨手寫寫…</a></li>
</ul>
]]></content>
      <categories>
        <category>架站相關</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>SSH</tag>
        <tag>Termux</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu 18.04 最小安裝筆記</title>
    <url>/2020/04/19/ubuntu-18-04-%E6%9C%80%E5%B0%8F%E5%AE%89%E8%A3%9D%E7%AD%86%E8%A8%98/</url>
    <content><![CDATA[<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><ol>
<li><p>最小安裝<strong>需要使用到網路</strong>，你有有線網路用有線，無線網路用無線，沒有你就掰掰。<br>因為要連網，所以先確定好網卡驅動是否能夠在 mini 安裝環境下使用。</p>
</li>
<li><p>最小安裝難免在後面安裝其他程式的時候會有套件缺失的問題（最小安裝的套件會少很多），<br>不能接受就迴避ㄅ。</p>
</li>
<li><p>如果 Ubuntu 的最小安裝你都無法接受，<strong>那請你千萬別碰Arch Linux</strong>，因為它超麻煩</p>
</li>
</ol>
<h2 id="為什麼要做-Ubuntu-最小安裝？"><a href="#為什麼要做-Ubuntu-最小安裝？" class="headerlink" title="為什麼要做 Ubuntu 最小安裝？"></a>為什麼要做 Ubuntu 最小安裝？</h2><p>自己的理由 :</p>
<ul>
<li>反正我很閒 &#x2F; 卑鄙源之助</li>
<li>練功</li>
<li>Ubuntu 沒精簡真的太肥，選了最小安裝也是肥，雖然我自己最小安裝裝起來好像也很肥就是了</li>
<li>爽感（無誤）</li>
<li>我不想用 tasksel …</li>
</ul>
<h2 id="開始"><a href="#開始" class="headerlink" title="開始"></a>開始</h2><p>首先去下載<a href="https://help.ubuntu.com/community/Installation/MinimalCD">映像檔</a>，然後想辦法用到 USB 裡面去</p>
<ul>
<li>Windows 環境下推薦使用<a href="https://rufus.ie/">Rufus</a></li>
<li>就算你是 UEFI 電腦也別肖想全部 copy 過去就沒事了，一樣不能開機…<br>（因為 bootx64.efi 還要解開 img 檔案才有）</li>
</ul>
<p>然後就是開機安裝了，這部份應該不用教。(幹勒自己寫的筆記教屁喔)</p>
<p>但是因為 18.04 之後的 mini 安裝環境的中文環境有 bug ，所以<strong>安裝要選擇英文安裝</strong></p>
<ul>
<li>這部份的 bug 你也可以在 Ubuntu Server 安裝的時候體驗到，畢竟安裝環境差不多</li>
</ul>
<p>對了，畢竟是最小安裝，所以出現軟體選擇的時候<strong>請跳過</strong></p>
<p>反正裝好了看到文字界面你就成功了</p>
<h2 id="安裝-Gnome"><a href="#安裝-Gnome" class="headerlink" title="安裝 Gnome"></a>安裝 Gnome</h2><p>會選擇 Gnome 當作桌面只是因為它在我這台電腦（Acer Aspire 3750G）最安定最順，而且我也不排斥。</p>
<p>不過說起來 Gnome 其實很肥…。不管了裝就對了，穩比較重要（？</p>
<p>下以下指令就可以裝上去了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install gnome-session gdm3</span><br></pre></td></tr></table></figure>

<ul>
<li>給只是想要 Gnome Vanilla 環境而查到這篇文章的人 :<ul>
<li>裝 <code>gnome-session</code> 就好，然後登出後去切換</li>
</ul>
</li>
<li>裝好之後別忘了安裝 <code>gnome-terminal</code> ，不然進入桌面環境之後沒終端機可以用</li>
<li>如果你打算在圖形界面下管理檔案…<ul>
<li><p>安裝檔案管理軟體</p>
<ul>
<li>個人是用用跟 Gnome 搭配的 Nautilus</li>
<li>安裝：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install nautilus</span><br></pre></td></tr></table></figure>
</li>
<li><p>選擇別裝圖形軟體，用 ls、cp、mv、rm 也是個好選擇啊</p>
</li>
</ul>
</li>
<li>如果你有打算開機的時候不要自動進入桌面的話…<ul>
<li>安裝 <code>xinit</code> 後你就可以用 <code>startx</code> 手動進入桌面</li>
</ul>
</li>
<li>如果你不喜歡 gdm 預設的紫色背景…<ul>
<li>下 <code>sudo update-alternatives --config gdm3.css</code> 然後選擇<br><code>/usr/share/gnome-shell/theme/gnome-shell.css</code> 那一項<br>這樣登出之後應該就是 Gnome 預設的灰色了</li>
</ul>
</li>
</ul>
<h2 id="搞定中文字型支援-amp-安裝-fcitx"><a href="#搞定中文字型支援-amp-安裝-fcitx" class="headerlink" title="搞定中文字型支援 &amp; 安裝 fcitx"></a>搞定中文字型支援 &amp; 安裝 fcitx</h2><h3 id="中文字型支援"><a href="#中文字型支援" class="headerlink" title="中文字型支援"></a>中文字型支援</h3><p>打開 Language Support ，點「Install &#x2F; Remove Languages…」<br>Chinese (tradition) 勾起來~</p>
<p><img src="/post_image/2020/ubuntu-mini/gnome-chinese-tradition.png"></p>
<p>Apply 之後就完成了，如果有缺少檔案就麻煩他順便裝一裝。</p>
<h3 id="安裝-fcitx"><a href="#安裝-fcitx" class="headerlink" title="安裝 fcitx"></a>安裝 fcitx</h3><p>下指令安裝</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install fcitx fcitx-chewing</span><br></pre></td></tr></table></figure>

<p>裝好之後去 Fcitx Configuration 新增輸入法</p>
<p><img src="/post_image/2020/ubuntu-mini/fcitx-chewing-setting.png"></p>
<p>記得把「Only Show Current Language」取消勾選，<br>如果你的 Ubuntu 語系不是中文的話，不然會看不到。</p>
<p>最後記得去 Language Support 把 「Keyboard input method system:」改成 fcitx<br>然後<strong>登出再登入</strong></p>
<p><img src="/post_image/2020/ubuntu-mini/languagesupport-fcitx-selected.png"></p>
<h2 id="使用-Ubuntu-的懶人方法安裝-Nvidia-driver"><a href="#使用-Ubuntu-的懶人方法安裝-Nvidia-driver" class="headerlink" title="使用 Ubuntu 的懶人方法安裝 Nvidia driver"></a>使用 Ubuntu 的懶人方法安裝 Nvidia driver</h2><p>這就是我為什麼會選用 Ubuntu 當作我學習 Linux 的主力系統原因，<br>就是 Nvidia driver 太好裝了。只要點個幾個 GUI 界面就裝好，<br>還不需要去做額外設定就可以應付最基本的日常使用。</p>
<p>當然如果你有要用到 CUDA 等 Nvidia 附帶的運算功能，<br>那這個段落就毫無參考價值了。</p>
<h3 id="安裝-ubuntu-drivers"><a href="#安裝-ubuntu-drivers" class="headerlink" title="安裝 ubuntu-drivers"></a>安裝 ubuntu-drivers</h3><p>其實精簡安裝沒有附帶這好用的工具可以用，那就自己裝！</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">suod apt install ubuntu-drivers-common</span><br></pre></td></tr></table></figure>

<ul>
<li>然後這個好像不是官方附帶的那個…？<ul>
<li>沒事,照用（欸</li>
</ul>
</li>
</ul>
<p><img src="/post_image/2020/ubuntu-mini/ubuntu-drivers.png"></p>
<p>先用 <code>ubuntu-drivers list</code> 確認有沒有找到你的 Nvidia 裝置，沒有就代表這方法行不通<br>如果有找到的話， <code>sudo ubuntu-drivers install</code> 輸入下去讓他幫你跑完。<br>跑完之後再重開機，你的 Nvidia 顯示卡就可以使用了。</p>
<h2 id="zsh-安裝與-tty-辛酸史"><a href="#zsh-安裝與-tty-辛酸史" class="headerlink" title="zsh 安裝與 tty 辛酸史"></a>zsh 安裝與 tty 辛酸史</h2><p>這我打算開一篇新文章專門講這些事，敬請期待～<br>（因為受傷害太深所以先不要馬上寫）</p>
<h2 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h2><p>老實說 Ubuntu 本身就不怎麼精簡了，所以這樣的裝法可能無法精簡太多。<br>但至少你有比較大的彈性安裝你自己想要的套件，<br>而不是被 <code>ubuntu-desktop</code> 強塞一堆垃圾。</p>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><a href="https://itsfoss.com/vanilla-gnome-ubuntu/">Getting Real GNOME Back in Ubuntu 18.04 [Quick Tip]</a> by It’s FOSS<br><a href="http://samwhelp.github.io/book-ubuntu-qna/read/case/driver/install-driver-package/ubuntu-drivers">如何使用「ubuntu-drivers」這個指令，來輔助安裝驅動程式套件</a> by Ubuntu 問答集</p>
]]></content>
      <categories>
        <category>系統維運</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>VLC 抓取 .m3u8 線上串流影片的方法</title>
    <url>/2017/10/10/vlc-m3u8-download/</url>
    <content><![CDATA[<ol>
<li>.m3u8抓取會比較麻煩，不能用傳統的方式抓取。</li>
</ol>
<p>如果用傳統的方式抓取，那只會抓到一個幾百kb卻不能觀看的檔案而已， 所以需要點工具。</p>
<span id="more"></span>
<p>VLC剛好可以滿足需求XD 雖然應該還有直接抓取的工具，不過VLC又不是只有抓取功能，還可以看影片， 我也比較懶得用那麼多工具。</p>
<h3 id="步驟"><a href="#步驟" class="headerlink" title="步驟"></a>步驟</h3><p>首先你要先：</p>
<ul>
<li><a href="https://www.videolan.org/vlc/index.zh-TW.html">搞到VLC</a></li>
<li>有.m3u8的網址（請不要直接下載它）</li>
</ul>
<p>搞到之後開啟VLC，選擇「媒體→轉換 &#x2F; 儲存」 <img src="/post_image/2018/06/01-2.png" alt="01"> 在視窗內選擇「網路」之標籤頁，輸入有.m3u8的網址之後，再按下右下角的「Convert&#x2F;Save」 <img src="/post_image/2018/06/02-2.png" alt="02"> 把目的地填好填滿之後，再按下「開始」等VLC的播放進度跑完即可 <img src="/post_image/2018/06/03.png" alt="03"> 上面的圖示中，可以把mp4轉成其他格式（建議還是mp4好，其他格式不見得所有設備都支援），這部分可能就要自行研究一下了。</p>
]]></content>
      <categories>
        <category>系統維運</category>
      </categories>
      <tags>
        <tag>m3u8</tag>
        <tag>VLC</tag>
      </tags>
  </entry>
  <entry>
    <title>WinSerEssentials體驗 之 如何讓 Remote Web Access 與 WordPress 共存</title>
    <url>/2017/11/25/winseressentials-remote-web-access-with-wordpress/</url>
    <content><![CDATA[<p>最近在Windows Server Essentials體驗上搞了很久，起初是看到<a href="https://dotblogs.com.tw/swater111/2013/05/09/103308">可以用Windows Server架設自己的多媒體網站</a>，就想說來用用看，結果沒想到<strong>Windows Server 2016的Essentials體驗竟然不支援媒體擴充套件</strong>，只好降級回Server 2012 R2，但2012 R2一玩下去的問題又很多，後來是把他們都解決了，然而有些是莫名其妙就好了，猜不透，之後有空再寫一篇心得文。 把Remote Web Access搞定之後，接下來就是想把WordPress裝在自己的電腦上，但這一塊讓我的腦袋徹底打結，原因是要設定的東西還真不少……。</p>
<span id="more"></span>
<h3 id="搞定實體路徑"><a href="#搞定實體路徑" class="headerlink" title="搞定實體路徑"></a>搞定實體路徑</h3><p>Remote Web Access在設定的過程中，會建立一些IIS的應用程式與虛擬目錄，並且會把Default Web Site的實體路徑改變。 當然這是Server 2012 R2以前的狀況，<strong>在Server 2016的實體路徑完全沒有變化</strong>，結果這樣反倒是造成一票人的困擾，因為不會自動導向（他們希望一連網址就是開啟Remote Web Access）。 那為什麼要改變預設路徑，當然是因為在C:\Program Files\Windows \Server\Bin\WebApps\Site路徑下管理網站頗不方便。 所以就，改吧。 <img src="/post_image/2018/06/01.png" alt="01"></p>
<h3 id="Web-Platform-Installer-懶人搞定-WordPress"><a href="#Web-Platform-Installer-懶人搞定-WordPress" class="headerlink" title="Web Platform Installer 懶人搞定 WordPress"></a><a href="https://www.microsoft.com/web/downloads/platform.aspx">Web Platform Installer</a> 懶人搞定 WordPress</h3><p>在IIS上安裝WordPress是非常非常非常麻煩的事情，你要設定PHP、MySQL還有URL Rewrite，一個一個設定會累死你自己。還好有Web Platform Installer可以搞定。 以下Web Platform Installer &#x3D; WebPI。 沒看過WebPI的其實不要害怕，因為真的超簡單，點個新增安裝就好了XD。 <img src="/post_image/2018/06/02.png" alt="02"> 安裝會要求輸入MySQL的帳號密碼，完事之後還要設定一下WordPress的「應用程式名稱」（應為網址上的子目錄），如果你想要打上網址就直接連到網站，那就空白吧。 <img src="/post_image/2018/06/03-1.png" alt="03"> 這樣設定一輪之後，WordPress就都好了。</p>
<h3 id="解決安裝後-Remote-Web-Access-的403錯誤"><a href="#解決安裝後-Remote-Web-Access-的403錯誤" class="headerlink" title="解決安裝後 Remote Web Access 的403錯誤"></a>解決安裝後 Remote Web Access 的403錯誤</h3><p><img src="/post_image/2018/06/04.png" alt="04"> 安裝完WordPress之後，跑回去Remote Web Access一看，怎麼會403錯誤？ 後來查看Error訊息才發現URL rewrite把後面的字串傳給index.php了 :&lt;。 要解決這個問題，只能把URL rewrite好好設定一遍。 <img src="/post_image/2018/06/05.png" alt="05"> <img src="/post_image/2018/06/06.png" alt="06"> 找到在IIS管理員中的URL rewrite（請注意是在Default Web Site站台下點選），之後新增一個空白的輸入規則。 名稱可以隨便，比對URL中的樣式打「remote」且記得忽略大小寫，條件兩個－remote既不是檔案也不是目錄（他是IIS的應用程式），動作選擇「無」，最後記得勾選「停止處理後續規則」以避免此規則處理完後又處理後面的規則。 完整設定起來大概是這樣： <img src="/post_image/2018/06/07.png" alt="07"> 之後請不要忘記把新設定好的規則上移到最上面，他必須要優先處理。 <img src="/post_image/2018/06/08.png" alt="08"> <em>這樣Remote Web Access + WordPress的工作就大功告成，enjoy!</em></p>
]]></content>
      <categories>
        <category>系統維運</category>
      </categories>
      <tags>
        <tag>Remote Web Access</tag>
        <tag>Windows Server Essentials</tag>
        <tag>隨處存取</tag>
      </tags>
  </entry>
  <entry>
    <title>WSL 2 目前遇到的各種問題與解法</title>
    <url>/2020/07/26/wsl-2-%E7%9B%AE%E5%89%8D%E9%81%87%E5%88%B0%E7%9A%84%E5%90%84%E7%A8%AE%E5%95%8F%E9%A1%8C%E8%88%87%E8%A7%A3%E6%B3%95/</url>
    <content><![CDATA[<blockquote>
<p>玩具，終究只是玩具 — Nesquate 2020&#x2F;07&#x2F;26</p>
</blockquote>
<p>最後更新：2020&#x2F;07&#x2F;26</p>
<h2 id="記憶體吃太兇"><a href="#記憶體吃太兇" class="headerlink" title="記憶體吃太兇"></a>記憶體吃太兇</h2><p><img src="/post_image/2020/wsl-2-problems/image-01.png"></p>
<p>當時我在跑以下指令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">repo <span class="built_in">sync</span> -f -c --no-tags -j16 -q</span><br></pre></td></tr></table></figure>

<p>然後 WSL 2 直接把我的記憶體徹底吃光，毫不留情面。</p>
<p>解決方法是在使用者目錄底下新增 <code>.wslconfig</code> 的檔案，填入以下內容，下 <code>wsl --shutdown</code> 後重開 Linux 發行版就好：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[wsl2]</span><br><span class="line">memory=6GB</span><br><span class="line">swap=0</span><br><span class="line">localhostForwarding=true</span><br></pre></td></tr></table></figure>

<p>解法來源：<a href="https://github.com/microsoft/WSL/issues/4166">這裡</a></p>
<h2 id="刪除檔案之後-WSL-2-仍然佔用硬碟空間"><a href="#刪除檔案之後-WSL-2-仍然佔用硬碟空間" class="headerlink" title="刪除檔案之後 WSL 2 仍然佔用硬碟空間"></a>刪除檔案之後 WSL 2 仍然佔用硬碟空間</h2><p><img src="/post_image/2020/wsl-2-problems/image-02.png"></p>
<p>我已經把檔案清光光，但是看來 VHDX 檔案沒有跟著縮小， 解決方法就是手動把 VHDX 給縮小。</p>
<p>開啟 Powershell ，到 WSL 發行版目錄底下的 <code>LocalState</code> 資料夾，輸入以下指令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wsl --shutdown # 先徹底關閉 WSL Lxss 的服務</span><br><span class="line">optimize-vhd -Path .\ext4.vhdx -Mode full</span><br></pre></td></tr></table></figure>

<p>這樣就可以減少好幾百 GB 的空間佔用了（但還是有 10 幾 G 那麼大）</p>
<p>解法來源：<a href="https://github.com/microsoft/WSL/issues/4699">這裡</a></p>
]]></content>
      <categories>
        <category>系統維運</category>
      </categories>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>XZP (AOSP) 關閉dm-verity及/data強制加密</title>
    <url>/2018/06/16/xzp-aosp-%E9%97%9C%E9%96%89dm-verity%E5%8F%8A-data%E5%BC%B7%E5%88%B6%E5%8A%A0%E5%AF%86/</url>
    <content><![CDATA[<p>從2018&#x2F;4的AOSP編譯開始，Sony官方開始強制使用dm-verity和&#x2F;data加密。 而這樣會發生什麼問題呢？使用dm-verity會增加安裝Magisk的難度，畢竟這機制是一開機就會驗證是否有修改系統。不裝Magisk就無法root、或是安裝如Xposed等systemless模組。 &#x2F;data強制加密將會導致TWRP無法使用（閃退），經過XDA大神及本人的實測，關閉&#x2F;data強制加密後TWRP就可以使用了。這應該是TWRP的一個bug，只能等待修正。</p>
<span id="more"></span>
<p>所以這篇筆記文就誕生了。</p>
<h2 id="關閉dm-verity"><a href="#關閉dm-verity" class="headerlink" title="關閉dm-verity"></a>關閉dm-verity</h2><p>關閉dm-verity有兩個部份要動：Kernel和Platform 同步完原始碼之後，切換到目錄至kernel&#x2F;sony&#x2F;msm&#x2F;arch&#x2F;arm64&#x2F;configs下，找到「aosp_yoshino_maple_defconfig」並且打開。 以dm-verity搜尋應該會找到這幾個： [code] CONFIG_DM_VERITY&#x3D;y CONFIG_DM_VERITY_FEC&#x3D;y CONFIG_DM_VERITY_AVB&#x3D;y CONFIG_DM_ANDROID_VERITY&#x3D;y [&#x2F;code] <strong>請把他們全部調成「n」並且存檔</strong>，Kernel的部份就完成了。 接著是Platform的部份，將目錄切換到device&#x2F;sony&#x2F;yoshino底下，開啟platform.mk 移動到文件的最後一行，應該會看到： [code]</p>
<h1 id="setup-dm-verity-configs"><a href="#setup-dm-verity-configs" class="headerlink" title="setup dm-verity configs."></a>setup dm-verity configs.</h1><p>PRODUCT_SYSTEM_VERITY_PARTITION :&#x3D; &#x2F;dev&#x2F;block&#x2F;platform&#x2F;soc&#x2F;1da4000.ufshc&#x2F;by-name&#x2F;system $(call inherit-product, build&#x2F;target&#x2F;product&#x2F;verity.mk) [&#x2F;code] <strong>把後兩行以「#」為開頭註解掉並且存檔</strong>，之後重新編譯就完成關閉dm-verity了。</p>
<h2 id="關閉-x2F-data強制加密"><a href="#關閉-x2F-data強制加密" class="headerlink" title="關閉&#x2F;data強制加密"></a>關閉&#x2F;data強制加密</h2><p>需要修改Partition map。 首先目錄切換到device&#x2F;sony&#x2F;yoshino&#x2F;rootdir&#x2F;vendor&#x2F;etc下，找到fstab.yoshino並打開。 找到&#x2F;dev&#x2F;block&#x2F;bootdevice&#x2F;by-name&#x2F;userdata這行，後面有一串東西： [code] noatime,nosuid,nodev,barrier&#x3D;1,data&#x3D;ordered,noauto_da_alloc,errors&#x3D;panic wait,check,formattable,fileencryption&#x3D;ice,quota [&#x2F;code] 重點在fileencryption&#x3D;ice，有了此行將會導致首次開機強制加密。 <strong>要關閉的話，把它換成encryptable&#x3D;footer並且存檔</strong>，然後重新編譯。</p>
<h2 id="repo-sync衝突"><a href="#repo-sync衝突" class="headerlink" title="repo sync衝突"></a>repo sync衝突</h2><p>遇到代碼衝突而無法同步的話，因為小的還不太懂git指令，我的作法是把修改的檔案砍掉再執行repo sync，然後再重新修改一次。</p>
]]></content>
      <categories>
        <category>系統維運</category>
      </categories>
      <tags>
        <tag>XZP</tag>
        <tag>/data</tag>
        <tag>disable</tag>
        <tag>dm-verity</tag>
        <tag>forceencryption</tag>
        <tag>sony</tag>
      </tags>
  </entry>
  <entry>
    <title>不在分割表上的 ext4</title>
    <url>/2022/08/21/%E4%B8%8D%E5%9C%A8%E5%88%86%E5%89%B2%E8%A1%A8%E4%B8%8A%E7%9A%84-ext4/</url>
    <content><![CDATA[<p>我已經忘記我當初是怎麼分割資料碟了，只知道是跟 EndeavourOS 安裝的時候一起格式化。</p>
<p>最近因為遊戲需求逐漸增加而把 Windows 灌回自己的 Laptop，把兩顆硬碟都分一半，結果在 Windows 操作磁碟工具時提示「磁碟初始化」的訊息。</p>
<p>因為自己不記得自己曾經幹了啥事，所以直接回到 Linux 去看發生什麼事。</p>
<p>首先是 GParted，發現怎麼縮小分割，最後都會變成最大（嘗試 e2fsck 後都會跑 resize2fs，超怪），然後就跑去 Google 一下 ext4 without partition table 的狀況，找到這篇 <a href="https://unix.stackexchange.com/questions/346826/is-it-ok-to-mkfs-without-partition-number" title="StackExchange">StackExchange</a>，裡面的最佳解答如下：</p>
<blockquote>
<p>Creating a filesystem on a whole disk rather than a partition is possible, but unusual. The documentation only explicitly mentions the partition because that’s the most usual case (it does say usually). You can create a filesystem on anything that acts sufficiently like a fixed-size file, i.e. something where if you write data at a certain location and read back from the same location then you get back the same data. This includes whole disks, disk partitions, and other kinds of block devices, as well as regular files (disk images).</p>
<p>After doing mkfs.fat -n A &#x2F;dev&#x2F;sdb, you no longer have a partition on that disk. Beware that the kernel still thinks that the disk has a partition, because it keeps the partition table cached in memory. But you shouldn’t try to use &#x2F;dev&#x2F;sdb1 anymore, since it no longer exists; writing to it would corrupt the filesystem you created on &#x2F;dev&#x2F;sdb since &#x2F;dev&#x2F;sdb1 is a part of &#x2F;dev&#x2F;sdb (everything except a few hundred bytes at the beginning). Run the command partprobe as root to tell the kernel to re-read the partition table.</p>
<p>While creating a filesystem on a whole disk is possible, I don’t recommend it. Some operating systems may have problems with it (I think Windows would cope but some devices such as cameras might not), and you lose the possibility of creating other partitions. See also <a href="https://unix.stackexchange.com/questions/14010/the-merits-of-a-partitionless-filesystem">The merits of a partitionless filesystem</a></p>
</blockquote>
<p>再點進去解答者提供的連結，看了一下，原來 Oracle VM 也這樣幹…。</p>
<p>後來去 <code>lsblk</code> 看一下，<code>sda</code> 後面沒號碼是直接整個掛起來的：</p>
<p><img src="/post_image/2022/ext4-not-in-partition-table/Screenshot_20220821_200036.png"></p>
<p>然後再去 <code>/etc/fstab</code> 看一下，因為我當初直接用 GNOME 提供的磁碟工具來掛載，不知道裡面寫了啥，所以要檢查一下：</p>
<p><img src="/post_image/2022/ext4-not-in-partition-table/Screenshot_20220821_200154.png"></p>
<p>好吧，當初用 UUID 的方式掛起來。不過我對我當初怎麼分割成這樣已經完全沒有任何印象了 lol</p>
]]></content>
      <categories>
        <category>系統維運</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>EndeavourOS</tag>
      </tags>
  </entry>
  <entry>
    <title>併站告知</title>
    <url>/2023/03/30/%E4%BD%B5%E7%AB%99%E5%91%8A%E7%9F%A5/</url>
    <content><![CDATA[<p>目前這個網站已經結合了以下網站的所有內容或部分內容：</p>
<ul>
<li><strong>我明白了，也許</strong> - 原名為「角落的視角」，創建於 2017&#x2F;10&#x2F;10 (WordPress -&gt; WordPress.com)</li>
<li><strong>閒著來寫</strong> - 創建於 2018&#x2F;11&#x2F;02 (Blogger.com)</li>
<li><strong>Nesquate</strong> - 創建於 2019&#x2F;09&#x2F;20 (WordPress -&gt; Hexo -&gt; Hugo)</li>
<li><strong>美代子的部落格</strong> - 創建於 2021&#x2F;03&#x2F;10 (Hexo)</li>
<li><strong>美代子隨筆</strong> - 創建於 2022&#x2F;05&#x2F;04 (WordPress -&gt; Hexo -&gt; 11ty -&gt; Hugo -&gt; WordPress)</li>
</ul>
<p>這可能還不是最終列表，若有新網站的被併入的話，此列表會更新。</p>
<span id="more"></span>
<h3 id="發生什麼事？"><a href="#發生什麼事？" class="headerlink" title="發生什麼事？"></a>發生什麼事？</h3><p>Long story.</p>
<p>2010 年 10 月 10 日時我有架設一個叫做「飯飯工作室」的網站，這是我上網 (2007年開始) 以來經營 Blog 最久的一次，後來在 2014 年 4 月關閉，期間發文累計 100 多篇文章，月流量 1600 出頭，Facebook 粉絲團 1000 讚出頭，算是小型網站。</p>
<p>但 2014 年 8 月之後有手癢一下子用 WordPress.com 開了一個測試站點之後就專心玩 <a href="https://osu.ppy.sh/">osu!</a> 去了。</p>
<p>直到 2017 年因為諸事不順又想起了可以架設部落格的念頭，創立了「角落的視角」，一開始還使用著「飯飯工作室」時期的架站老方法 (花 3000 台幣去租 Share Hosting)，後來覺得太麻煩就跑去 WordPress.com，然後又覺得 WFU Blog 太猛了就跑去 Blogger，之後就沒有想要碰 Blog 的意思直到 2019 年。</p>
<p>2019 年以現有暱稱 <strong>Nesquate</strong> 創立同名網站，當時也是使用 WordPress，但後來知道靜態網頁產生器之後就跑去用 Hexo，後來因為學 Golang 所以也轉去用 Hugo (儘管 Golang 學沒多久就放棄了因為後來沒有需要)，然後又懶得更新。</p>
<p>2021 年又想到該寫 Blog，所以又用 Hexo 架設一次 (然後又放置)。</p>
<p>2022 年 5 月 4 日創立本站 (<strong>美代子隨筆</strong>，但這名稱是從我另一個不公開 Blogger 網站來的，成立於 2021 年 2 月 3 日)，中間一波三折，從 WordPress 轉去 Hugo，又跑去 11ty，但又覺得 11ty 太多東西要手動寫而轉去 Hugo，最近想玩 VPS 所以又轉回 WordPress。</p>
<h3 id="搬家似乎沒有盡頭"><a href="#搬家似乎沒有盡頭" class="headerlink" title="搬家似乎沒有盡頭"></a>搬家似乎沒有盡頭</h3><p>我會用哪個平台，跟我當下的心情很有關係，如果我開心我就會去折騰 VPS，那我就會選擇自架 WordPress；如果我不開心想要懶人一點，那我就會選擇 BSP，如 Blogger；如果我想折騰但是不想花錢，那我就會選擇靜態網頁產生器，例如 Hexo。</p>
<p>所以如果我哪天心情不好，大概我又會換平台，像我現在很有可能會因為 Gutenberg 編輯器而跳腳，XD…</p>
<p>我也知道我每次說出來的東西都做不到，所以我這次就不說什麼「我這次就在這個平台待久一點」這種奇怪的宣言吧，因為很難，甚至不可能，我現在寧願選擇順其自然。</p>
<p>儘管平台替換會影響到 SEO，但我不太 Care。</p>
<p><img src="/post_image/2023/merged-sites/no_seo_bandiwidth_come.png"></p>
<p>反正我開心就好。</p>
]]></content>
      <categories>
        <category>個人想法</category>
      </categories>
      <tags>
        <tag>Blog</tag>
        <tag>搬家</tag>
      </tags>
  </entry>
  <entry>
    <title>利用 userChrome.css 隱藏最上面的 Tab Bar (Firefox 81)</title>
    <url>/2021/03/17/%E5%88%A9%E7%94%A8-userchrome-css-%E9%9A%B1%E8%97%8F%E6%9C%80%E4%B8%8A%E9%9D%A2%E7%9A%84-tab-bar-firefox-81/</url>
    <content><![CDATA[<h2 id="隱藏的理由"><a href="#隱藏的理由" class="headerlink" title="隱藏的理由"></a>隱藏的理由</h2><p>自從安裝了 <a href="https://addons.mozilla.org/zh-TW/firefox/addon/tree-style-tab/">Tree Style Tab</a> 之後，Firefox 最上面的 Tab bar 其實就用不太到了。<br>出於過往的習慣，自己還會一直想要在上面點 Tab ，但目前我未關閉的 Tab 有八十幾個，而且已經用 Tree Style Tab 管理上下關係了，因此想要把上面的 Tab 列表給隱藏。</p>
<p>本文從啟用 userChrome.css 功能開始，與大家說明如何透過 userChrome.css 隱藏最上面的 Tab Bar。</p>
<span id="more"></span>
<h2 id="啟用自動載入的-Flag"><a href="#啟用自動載入的-Flag" class="headerlink" title="啟用自動載入的 Flag"></a>啟用自動載入的 Flag</h2><p>這裡會進入 Firefox 的 <code>about:config</code> 頁面。</p>
<p>在瀏覽器上輸入 <code>about:config</code> 之後，<br>在裡面的搜尋框搜尋 <strong>toolkit.legacyUserProfileCustomizations.stylesheets</strong> ，並把他的布林值改為 <strong>true</strong>：</p>
<p><img src="/post_image/2021/firefox-hide-tabbar-using-userChrome/1-flag_enable-01.png"></p>
<p>改完之後記得重啟 Firefox 。</p>
<h2 id="進入設定檔目錄，放入-userChrome-css"><a href="#進入設定檔目錄，放入-userChrome-css" class="headerlink" title="進入設定檔目錄，放入 userChrome.css"></a>進入設定檔目錄，放入 userChrome.css</h2><p>點選 Firefox 右上角的<strong>選單 &gt; 說明 &gt; 疑難排解資訊</strong>，在畫面中有目前 Firefox 設定檔目錄的路徑，左邊有「開啟資料夾」的按鈕，請點它：</p>
<p><img src="/post_image/2021/firefox-hide-tabbar-using-userChrome/2-putUserChrome-1.png"></p>
<p>開啟資料夾之後，請在裡面新增一個叫做 <strong>chrome</strong> 的空資料夾，並在該資料夾新增 <strong>userChrome.css</strong> 的文字文件 ( 須注意副檔名 )。</p>
<p>然後在 <code>userChrome.css</code> 當中放入以下內容，然後存檔<strong>並重啟 Firefox</strong>：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@-moz-document</span> url(<span class="attribute">chrome</span>://browser/content/browser.xul),</span><br><span class="line">               url(<span class="attribute">chrome</span>://browser/content/browser.xhtml) &#123;</span><br><span class="line">    <span class="comment">/* Your style rules for the user interface go here */</span></span><br><span class="line">    <span class="selector-class">.titlebar-spacer</span> &#123;</span><br><span class="line">        <span class="attribute">display</span>: none;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-id">#TabsToolbar-customization-target</span> &#123;</span><br><span class="line">        <span class="attribute">display</span>: none;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>這樣你的 Tab Bar 就被隱藏起來了：</p>
<p><img src="/post_image/2021/firefox-hide-tabbar-using-userChrome/2-putUserChrome-2.png"></p>
<h2 id="補充：如果我想要自己改其他樣式…"><a href="#補充：如果我想要自己改其他樣式…" class="headerlink" title="補充：如果我想要自己改其他樣式…"></a>補充：如果我想要自己改其他樣式…</h2><p>如果你想要修改其他樣式的話，除了要做上面啟用 Flag 的動作之外，還要再多開一些東西才會有效果。<br>然而修改其他樣式需要有一些 CSS 、 HTML 的基礎，這部分可能就要麻煩自我學習了。</p>
<p>按下鍵盤的 <strong>F12&#x2F;Ctrl+Shift+I</strong> 或是 <strong>選單 &gt; 網頁開發者 &gt; 網頁工具箱</strong>，開啟「網頁工具箱」 ( 圖片名詞有誤，請忽略 )，之後進入設定：</p>
<p><img src="/post_image/2021/firefox-hide-tabbar-using-userChrome/3-customStyle-1.png"></p>
<p>關閉網頁主控台，按下鍵盤的 <strong>Ctrl+Shift+Alt+I</strong> 或是 <strong>選單 &gt; 網頁開發者 &gt; 瀏覽器工具箱</strong>，開啟「瀏覽器工具箱」。<br>請注意開啟時可能會出現這個視窗，請允許它：</p>
<p><img src="/post_image/2021/firefox-hide-tabbar-using-userChrome/3-customStyle-2.png"></p>
<p>等待出現這視窗並且完全載入之後，你就可以如同對網頁除錯般地調整 Firefox 的介面：</p>
<p><img src="/post_image/2021/firefox-hide-tabbar-using-userChrome/3-customStyle-3.png"></p>
<p>切記，修改完之後記得把結果儲存在 <code>userChrome.css</code> 當中唷！</p>
]]></content>
      <categories>
        <category>系統維運</category>
      </categories>
      <tags>
        <tag>Firefox</tag>
        <tag>userChrome.css</tag>
      </tags>
  </entry>
  <entry>
    <title>在 Arch Linux 安裝最新版的 LINE 總整理</title>
    <url>/2022/07/13/%E5%9C%A8-arch-linux-%E5%AE%89%E8%A3%9D%E6%9C%80%E6%96%B0%E7%89%88%E7%9A%84-line-%E7%B8%BD%E6%95%B4%E7%90%86/</url>
    <content><![CDATA[<p>關於 Arch Linux 怎麼灌 LINE 的步驟，我已經在 PTT 上 (<a href="https://www.ptt.cc/bbs/Linux/M.1657093067.A.B49.html">https://www.ptt.cc/bbs/Linux/M.1657093067.A.B49.html</a>) 有初步分享，經由鄉民們的補充後，誕生出這篇文章。</p>
<p>整理出這篇就是希望以後自己在安裝 Arch Linux 的時候有點脈落，而不是缺啥補啥，搞到時間都浪費掉。</p>
<h3 id="安裝-Wine-以及套件庫"><a href="#安裝-Wine-以及套件庫" class="headerlink" title="安裝 Wine 以及套件庫"></a>安裝 Wine 以及套件庫</h3><p>首先必須打開 <a href="https://wiki.archlinux.org/title/official_repositories#multilib">multilib</a> 軟體庫，以 root 權限用文字編輯器開啟 <code>/etc/pacman.conf</code> 之後，取消註解下列內容：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line">[<span class="string">multilib</span>]</span><br><span class="line"><span class="string">Include</span> <span class="string">=</span> <span class="string">/etc/pacman.d/mirrorlist</span></span><br></pre></td></tr></table></figure>

<p>存檔之後，下 <code>sudo pacman -Syu</code> 重新同步軟體庫資料庫，之後安裝 Wine 與 Winetricks：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo pacman -S wine winetricks</span><br></pre></td></tr></table></figure>

<p>據 PTT 鄉民的回報，還需要加裝以下兩個 Library 才可以讓 LINE 的媒體功能正常運作（看圖以及影片聲音）：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo pacman -S lib32-openal lib32-libpulse</span><br></pre></td></tr></table></figure>

<h3 id="設定-LINE-的執行環境"><a href="#設定-LINE-的執行環境" class="headerlink" title="設定 LINE 的執行環境"></a>設定 LINE 的執行環境</h3><p>一樣是據 PTT 鄉民回報，最新版的 LINE 需要 64 位元的環境 + Visual C++ 2012 Runtime 才可以運行。</p>
<p>首先建立一個 LINE 專屬的 Wine 執行環境</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">WINEPREFIX=~/.wine-line winecfg</span><br></pre></td></tr></table></figure>

<p>並順便進入設定。過程中若有提示要安裝 Wine Mono 的話，請不要安裝，因為用不到 .NET 框架執行環境。</p>
<p>進入設定之後，目前只要改 Windows 執行版本為 Windows 10 就好。</p>
<p><img src="/post_image/2022/line-latest-install-in-arch/wine-line-01.jpg"></p>
<h3 id="安裝-Visual-C-2012-Runtime"><a href="#安裝-Visual-C-2012-Runtime" class="headerlink" title="安裝 Visual C++ 2012 Runtime"></a>安裝 Visual C++ 2012 Runtime</h3><p>這時可以請 Winetricks 代勞下載：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">WINEPREFIX=~/.wine-line winetricks vctun2012</span><br></pre></td></tr></table></figure>

<p>如果不給下載，進去 Winetricks -&gt; 選取預設的 Wine 容器 -&gt; 安裝 Windows DLL 或套件，句選 vctun2012 也可以。</p>
<p>預設它會把 32 位元和 64 位元的 Runtime 下載下來，如果有彈出安裝視窗就把它們裝好吧。</p>
<h3 id="安裝-LINE"><a href="#安裝-LINE" class="headerlink" title="安裝 LINE"></a>安裝 LINE</h3><p>搞定好 Runtime 之後，接下來可以直接下載<a href="https://desktop.line-scdn.net/win/new/LineInst.exe">最新版的 LINE</a>然後下以下指令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">WINEPREFIX=~/.wine-line wine /path/to/LineInst.exe</span><br></pre></td></tr></table></figure>

<p><code>/path/to/LineInst.exe</code> 改成 LineInst.exe 實際放置的路徑就好。</p>
<p>安裝結束之後，基本上你的 LINE 已經可以正常運作了。</p>
<h3 id="故障排除"><a href="#故障排除" class="headerlink" title="故障排除"></a>故障排除</h3><h4 id="切換到其他視窗時，LINE-視窗的外框還在？"><a href="#切換到其他視窗時，LINE-視窗的外框還在？" class="headerlink" title="切換到其他視窗時，LINE 視窗的外框還在？"></a>切換到其他視窗時，LINE 視窗的外框還在？</h4><p>Wine 的問題，左岸網友在 WeChat 上也有遇到，後來找到視窗外框的 ID 就解決了，</p>
<p>可以嘗試使用此方式解決看看。</p>
<p>可參考：<br><a href="https://www.ptt.cc/bbs/Linux/M.1643429963.A.510.html">https://www.ptt.cc/bbs/Linux/M.1643429963.A.510.html</a><br><a href="https://zhuanlan.zhihu.com/p/106926984">https://zhuanlan.zhihu.com/p/106926984</a></p>
<h4 id="字體顯示怪怪的"><a href="#字體顯示怪怪的" class="headerlink" title="字體顯示怪怪的"></a>字體顯示怪怪的</h4><p>安裝 <a href="https://aur.archlinux.org/packages/ttf-win10">ttf-win10</a> 可能可以解決這個問題，不過你可能要先去安裝 AUR Helper，以及安裝時會下載 Windows 10 的 ISO 檔案，請準備好 10GB 的可用磁碟空間。</p>
]]></content>
      <categories>
        <category>系統維運</category>
      </categories>
      <tags>
        <tag>Arch Linux</tag>
        <tag>Linux</tag>
        <tag>LINE</tag>
      </tags>
  </entry>
  <entry>
    <title>在 Arch Linux 底下安裝 LINE 的筆記（使用 Wine）</title>
    <url>/2020/05/23/%E5%9C%A8-arch-linux-%E5%BA%95%E4%B8%8B%E5%AE%89%E8%A3%9D-line-%E7%9A%84%E7%AD%86%E8%A8%98%EF%BC%88%E4%BD%BF%E7%94%A8-wine%EF%BC%89/</url>
    <content><![CDATA[<blockquote>
<p>(2022&#x2F;03&#x2F;30整理更) 目前已經有新版的教學可以看，請點以下連結</p>
<p><a href="https://blog.nesquate.tw/2022/07/13/%e5%9c%a8-arch-linux-%e5%ae%89%e8%a3%9d%e6%9c%80%e6%96%b0%e7%89%88%e7%9a%84-line-%e7%b8%bd%e6%95%b4%e7%90%86/">在 Arch Linux 安裝最新版的 LINE 總整理</a></p>
</blockquote>
<p><a href="https://hackmd.io/@nesquate/note-for-archlinux-wine-line">HackMD 重點整理版</a><br><em>（其實內容差不多）</em></p>
<p>會寫這篇文主要是紀錄一下我在 Arch Linux 底下安裝 Wine 與 LINE 的過程，以作為之後的參考。<br>因為在 Ubuntu 底下安裝之後遇到不少問題，像是字體問題就是令我非常頭大的事情。</p>
<p>我原本是先寫好 HackMD 筆記，想說公開丟著不管它好了，但是我想到我的部落格文章非常少，只好……。</p>
<h2 id="開啟-multilib-軟體庫"><a href="#開啟-multilib-軟體庫" class="headerlink" title="開啟 multilib 軟體庫"></a>開啟 multilib 軟體庫</h2><p>因為 LINE 需要 Wine 32 Bit 才能使用，所以要把 32 位元的軟體庫（<code>multilib</code>）給開起來</p>
<p>打開 <code>/etc/pacman.conf</code> 並且取消註解這兩行：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[multilib]</span><br><span class="line">Include = /etc/pacman.d/mirrorlist</span><br></pre></td></tr></table></figure>

<p>如果 LINE 可以在純 64 位元底下執行就好了，<br>不過看起來 LINE 目前還是用 32 位元編譯（為了相容性）</p>
<p>最後輸入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -Sy</span><br></pre></td></tr></table></figure>

<p>更新本地軟體庫</p>
<h2 id="安裝-Wine-與-Winetricks"><a href="#安裝-Wine-與-Winetricks" class="headerlink" title="安裝 Wine 與 Winetricks"></a>安裝 Wine 與 Winetricks</h2><p>順邊裝個 Winetricks 比較好管理</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S wine</span><br><span class="line">sudo pacman -S winetricks</span><br></pre></td></tr></table></figure>

<h2 id="設定"><a href="#設定" class="headerlink" title="設定"></a>設定</h2><h3 id="建立-Wine-32-環境"><a href="#建立-Wine-32-環境" class="headerlink" title="建立 Wine 32 環境"></a>建立 Wine 32 環境</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WINEARCH=win32 wincfg</span><br><span class="line"><span class="comment"># 如果你要自訂其他路徑的話</span></span><br><span class="line">WINEARCH=win32 WINEPREFIX=~/win32 winecfg </span><br></pre></td></tr></table></figure>

<h3 id="安裝-Visual-C-Runtime-2008"><a href="#安裝-Visual-C-Runtime-2008" class="headerlink" title="安裝 Visual C++ Runtime 2008"></a>安裝 Visual C++ Runtime 2008</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">winetricks vcrun2008</span><br></pre></td></tr></table></figure>

<h3 id="安裝-LINE"><a href="#安裝-LINE" class="headerlink" title="安裝 LINE"></a>安裝 LINE</h3><ul>
<li>Gnome的作法<ul>
<li>以其他應用程式開啟 -&gt; Wine Program Loader</li>
</ul>
</li>
<li>終端機的作法： <code>wine LineInst.exe</code></li>
</ul>
<h2 id="然後就沒有了？！"><a href="#然後就沒有了？！" class="headerlink" title="然後就沒有了？！"></a>然後就沒有了？！</h2><p>沒想到在 Arch Linux 搭配最新版的 LINE 與 Wine 居然沒什麼問題？！<br>Ubuntu 還有字體問題，果然是包袱越重問題越多嗎</p>
<h2 id="後記：Linux-悲歌"><a href="#後記：Linux-悲歌" class="headerlink" title="後記：Linux 悲歌"></a>後記：Linux 悲歌</h2><p>首先，不得不說我非常不喜歡用 LINE，<br>要不是跟現實妥協我還真的是不會用它，連碰都不想碰。</p>
<p>再來，消費者面向的軟體在 Linux 非常非常缺乏，<br>要不然就是，雖然有但是程式可用的功能跟 Windows&#x2F;macOS 差異頗大。</p>
<p>舉例來說，<br>Microsoft Office？沒上（只有上 Teams 而且還是 Beta？！）<br>Edge Chromium？還沒上（到底要什麼時候才上啊？）<br>還有本篇的 LINE。</p>
<p>只能說這真的是 Linux 悲歌了吧…。</p>
<h2 id="參考文件"><a href="#參考文件" class="headerlink" title="參考文件"></a>參考文件</h2><ul>
<li><a href="https://wiki.archlinux.org/index.php/Wine_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">Wine from Arch Linux Wiki</a></li>
<li><a href="https://blog.xuite.net/d93921012/twblog/252066321-%E5%9C%A8+WINE+%E4%B8%8A%E4%BD%BF%E7%94%A8+LINE">在 WINE 上使用 LINE</a></li>
</ul>
]]></content>
      <categories>
        <category>系統維運</category>
      </categories>
      <tags>
        <tag>Arch Linux</tag>
        <tag>Linux</tag>
        <tag>LINE</tag>
      </tags>
  </entry>
  <entry>
    <title>在 Windows 下建立 Hexo 5 與套用 Next 8 佈景主題</title>
    <url>/2021/03/10/%E5%9C%A8-windows-%E4%B8%8B%E5%BB%BA%E7%AB%8B-hexo-5-%E8%88%87%E5%A5%97%E7%94%A8-next-8-%E4%BD%88%E6%99%AF%E4%B8%BB%E9%A1%8C/</url>
    <content><![CDATA[<p><em>這裡只會說如何把基礎環境設定好，其他的就自己看<a href="https://hexo.io/zh-tw/docs/">Hexo 官網</a></em></p>
<h2 id="搞定-Node-js-部分"><a href="#搞定-Node-js-部分" class="headerlink" title="搞定 Node.js 部分"></a>搞定 Node.js 部分</h2><h3 id="NVS-Node-Version-Switcher"><a href="#NVS-Node-Version-Switcher" class="headerlink" title="NVS (Node Version Switcher)"></a>NVS (Node Version Switcher)</h3><p>至<a href="https://github.com/jasongin/nvs/releases/latest">Github</a>下載最新版的 NVS 並且把它安裝起來</p>
<p>安裝起來之後，輸入以下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nvs add lts</span><br><span class="line">nvs link lts</span><br></pre></td></tr></table></figure>

<p>打完之後，重開終端機或是跟 CLI 有關的東西，輸入 <code>node --version</code> 應該就會跑出版本號了。</p>
<h3 id="安裝-Hexo"><a href="#安裝-Hexo" class="headerlink" title="安裝 Hexo"></a>安裝 Hexo</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<h2 id="初始化-Hexo"><a href="#初始化-Hexo" class="headerlink" title="初始化 Hexo"></a>初始化 Hexo</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo init &lt;folder&gt;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">或是先切到資料夾底下再 hexo init 也可以</span></span><br></pre></td></tr></table></figure>

<p>設定的部分請參考官方說明文件</p>
<h2 id="安裝-Next-佈景主題"><a href="#安裝-Next-佈景主題" class="headerlink" title="安裝 Next 佈景主題"></a>安裝 Next 佈景主題</h2><p>我們借助 npm 來幫忙</p>
<p>進入 Hexo 所在的目錄，並輸入：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-theme-next</span><br></pre></td></tr></table></figure>

<p>然後設定 <code>_config.yml</code> ，修改 <code>theme:</code>:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure>

<p>並把 Next 的設定檔複製過來 :</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cp node_modules/hexo-theme-next/_config.yml _config.next.yml</span><br></pre></td></tr></table></figure>

<p>這樣就可以開始修改 <code>_config.next.yml</code> 來自訂佈景主題了。</p>
<h2 id="其他部分"><a href="#其他部分" class="headerlink" title="其他部分"></a>其他部分</h2><p>我這邊就只先做 Hexo 和 Next 的套用，更多資訊參考一下官網或是搜尋都會得到解答。</p>
]]></content>
      <categories>
        <category>架站相關</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>用 Docker 架 Nginx + WordPress (PHP-FPM) + MariaDB + CDN 的記錄</title>
    <url>/2023/03/31/%E7%94%A8-docker-%E6%9E%B6-nginx-wordpress-php-fpm-mariadb-cdn-%E7%9A%84%E8%A8%98%E9%8C%84/</url>
    <content><![CDATA[<h3 id="釐清需求"><a href="#釐清需求" class="headerlink" title="釐清需求"></a>釐清需求</h3><ul>
<li>需要有 HTTPS</li>
<li><strong>不要再 Reverse Proxy 了</strong></li>
<li>用 MariaDB</li>
<li><strong>需要活用 CDN 做圖片快取</strong></li>
</ul>
<p>HTTPS 已經是現在網站的標配了，而用 MariaDB 只是單純討厭 Oracle…。</p>
<p>至於 Reverse Proxy 的部分，以前在用 VPS 架設 WordPress 的時候，因為 PHP-FPM 與 Nginx 設定上的卡關，所以最後都用 Reverse Proxy 含糊過去。雖然架站速度也確實是快，但是因為容器內也有一個 HTTP Server，頗吃系統資源。</p>
<p>最後一點是 CDN，由於之後想要藉由 WordPress 內的媒體庫功能管理所有媒體，所以希望在連上 &#x2F;wp-content 底下相關內容時可以將上傳的內容全部給 CDN 做快取。</p>
<span id="more"></span>
<h3 id="docker-compose-yml-的撰寫"><a href="#docker-compose-yml-的撰寫" class="headerlink" title="docker-compose.yml 的撰寫"></a>docker-compose.yml 的撰寫</h3><p>這邊直接從 docker-compose.yml 開始切入，至於怎麼安裝 Docker 則不在本文討論範圍。</p>
<p>因為需要 HTTPS，所以這邊採用不用花錢的 Let’s Encrypt 方案，Docker 容器部署則是選擇整合了 Certbot 的 <a href="https://github.com/JonasAlfredsson/docker-nginx-certbot">docker-nginx-certbot</a> 這個 Image，Environment 的部分也只要填寫 CERTBOT_EMAIL 就好了。</p>
<p>WordPress 的 Image也是使用<a href="https://hub.docker.com/_/wordpress">官方版本</a>就好，不過這邊我有多設WORDPRESS_TABLE_PREFIX 原因是我沒有找到可以在同個 MariaDB (或 MySQL) 容器上輕易建立兩個以上的 Database，考量到之後還有可能要再用同個資料庫安裝其他服務，就先加上去。</p>
<p>WordPress 官方 Image 並沒有處理 SMTP，這我之後再找時間處理看看…。</p>
<p>MariaDB 的部分目前就先用官方 Image 就好，不過這邊沒啥要注意的事項，就依照自己需求設定就好。</p>
<p>所以整個 docker-compose.yml 寫起來會變成這樣：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3.9&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">web:</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">jonasal/nginx-certbot:4.2.0</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;80:80&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;443:443&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> </span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">CERTBOT_EMAIL:</span> </span><br><span class="line">    <span class="attr">networks:</span> </span><br><span class="line">      <span class="attr">default:</span></span><br><span class="line">        <span class="attr">aliases:</span></span><br><span class="line">          <span class="bullet">-</span> </span><br><span class="line">  <span class="attr">wordpress:</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">wordpress:6.1.1-php8.2-fpm-alpine</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">WORDPRESS_DB_HOST:</span> <span class="string">mariadb</span></span><br><span class="line">      <span class="attr">WORDPRESS_DB_USER:</span> </span><br><span class="line">      <span class="attr">WORDPRESS_DB_PASSWORD:</span> </span><br><span class="line">      <span class="attr">WORDPRESS_DB_NAME:</span> </span><br><span class="line">      <span class="attr">WORDPRESS_TABLE_PREFIX:</span> </span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> </span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="attr">default:</span></span><br><span class="line">        <span class="attr">aliases:</span></span><br><span class="line">          <span class="bullet">-</span> </span><br><span class="line">  <span class="attr">mariadb:</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mariadb:10.11.2-jammy</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">MYSQL_DATABASE:</span> </span><br><span class="line">      <span class="attr">MYSQL_USER:</span> </span><br><span class="line">      <span class="attr">MYSQL_PASSWORD:</span> </span><br><span class="line">      <span class="attr">MYSQL_RANDOM_ROOT_PASSWORD:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> </span><br></pre></td></tr></table></figure>

<p>我把敏感資訊和 Volume 相關資訊全部拔掉了，有需要者自己翻文件填入。</p>
<p>實際安裝後我發現 cURL 會有 Error 28 ，以及 PHP 效能奇差的問題，後來找到 <a href="https://stackoverflow.com/questions/61490829/error-curl-error-28-resolving-timed-out-after-10000-milliseconds-http-request">stackoverflow 上</a>有人解釋說 Nginx 容器的 network 要加上 alias，於是我 WordPress 和 Nginx 容器都加上去後就正常多了。</p>
<h3 id="Nginx-端的設定-先把-WordPress-搞定"><a href="#Nginx-端的設定-先把-WordPress-搞定" class="headerlink" title="Nginx 端的設定 - 先把 WordPress 搞定"></a>Nginx 端的設定 - 先把 WordPress 搞定</h3><p>至少 WordPress 要先能夠瀏覽才可以做其他設定吧？另外先設定好 Nginx 也是為了確保 <a href="https://github.com/JonasAlfredsson/docker-nginx-certbot">docker-nginx-certbot</a> 這個 Image 是否能夠正常運作。</p>
<p>容器要能夠運作需要指定 TLS 憑證的儲存位置才行，所以像是 ssl_certificate、ssl_certificate_key、ssl_trusted_certificate 和 ssl_dhparam 這些參數一定要設定，詳情可以參考 <a href="https://github.com/JonasAlfredsson/docker-nginx-certbot/blob/master/examples/example_server.conf">GitHub 上的 Example</a>。</p>
<p>設定 FPM Proxy 的時候要注意 fastcgi_param SCRIPT_FILENAME，網路上的各種教學所設定的值是 $document_root$fastcgi_script_name，如果 docker-nginx-certbot 的 root 參數與 WordPress 的設定 (&#x2F;var&#x2F;www&#x2F;html) 不同的話，請將 $document_root 改成 &#x2F;var&#x2F;www&#x2F;html 以避免連不上的問題。</p>
<p>整個 site.conf 設定結果大概像是這樣：</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">server</span> <span class="string">&#123;</span></span><br><span class="line"><span class="comment"># Listen to port 443 on both IPv4 and IPv6.</span></span><br><span class="line"><span class="attr">listen</span> <span class="string">443 ssl;</span></span><br><span class="line"><span class="attr">listen</span> <span class="string">[::]:443 ssl;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># Domain names this server should respond to.</span></span><br><span class="line"><span class="attr">server_name</span> <span class="string">&lt;your_domain_name&gt;;</span></span><br><span class="line"><span class="attr">root</span> <span class="string">&lt;dir&gt;;</span></span><br><span class="line"><span class="attr">index</span> <span class="string">index.php;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># Load the certificate files.</span></span><br><span class="line"><span class="attr">ssl_certificate</span>         <span class="string">/etc/letsencrypt/live/.../fullchain.pem;</span></span><br><span class="line"><span class="attr">ssl_certificate_key</span>     <span class="string">/etc/letsencrypt/live/.../privkey.pem;</span></span><br><span class="line"><span class="attr">ssl_trusted_certificate</span> <span class="string">/etc/letsencrypt/live/.../chain.pem;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># Load the Diffie-Hellman parameter.</span></span><br><span class="line"><span class="attr">ssl_dhparam</span> <span class="string">/etc/letsencrypt/dhparams/dhparam.pem;</span></span><br><span class="line">   </span><br><span class="line"><span class="attr">location</span> <span class="string">/ &#123;</span></span><br><span class="line"><span class="attr">try_files</span> <span class="string">$uri $uri/ /index.php?$is_args$args;</span></span><br><span class="line"><span class="attr">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">location</span> <span class="string">~ \.php$ &#123;</span></span><br><span class="line"><span class="attr">try_files</span> <span class="string">$uri =404;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">fastcgi_split_path_info</span> <span class="string">^(.+\.php)(/.+)$;</span></span><br><span class="line"><span class="attr">fastcgi_pass</span> <span class="string">&lt;wordpress_contain_name&gt;:9000;</span></span><br><span class="line"><span class="attr">fastcgi_index</span> <span class="string">index.php;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">include</span> <span class="string">fastcgi_params;</span></span><br><span class="line"><span class="attr">fastcgi_param</span> <span class="string">SCRIPT_FILENAME /var/www/html$fastcgi_script_name;</span></span><br><span class="line"><span class="attr">fastcgi_param</span> <span class="string">PATH_INFO $fastcgi_path_info;</span></span><br><span class="line"><span class="attr">&#125;</span></span><br><span class="line"><span class="attr">&#125;</span></span><br></pre></td></tr></table></figure>

<p>記得檢查 docker-compose.yml 確保檔案有被掛載到 &#x2F;etc&#x2F;nginx&#x2F;user_conf.d 裡面。還有 &#x2F;etc&#x2F;letsencrypt 這容器目錄也要掛載到 Volume 或是 Bind mount 否則每次開啟容器都會重新產生 TLS 憑證 (然後就不給你產了，印象中 Let’s Encrypt 同個網域 7 天後才能重新產生憑證)。</p>
<h3 id="PHP-與附件大小"><a href="#PHP-與附件大小" class="headerlink" title="PHP 與附件大小"></a>PHP 與附件大小</h3><p>WordPress 官方 Image 預設只給 2 MB 的上傳，雖然說可以提醒站長一定要將圖片壓縮再上傳（不然就算有 CDN 加持還是很危險），不過我還是把它設大一點比較省事。</p>
<p>建立檔名為 upload.ini (或其他檔名，副檔名建議為 .ini)，然後加入以下內容：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">upload_max_filesize</span> = <span class="number">32</span>M</span><br><span class="line"><span class="attr">post_max_size</span> = <span class="number">32</span>M</span><br></pre></td></tr></table></figure>

<p>32M 應該在各種場合上已經夠用，畢竟我也沒有要上傳影片的意思。</p>
<p>然後把 upload.ini 掛載到 WordPress 容器的 &#x2F;usr&#x2F;local&#x2F;etc&#x2F;php&#x2F;conf.d&#x2F; 底下，這樣重啟容器就會套用了。</p>
<p>但這樣還不夠，Nginx 那邊也要設定，所以在 site.conf  的 server 區段內下新增：</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">client_max_body_size</span> <span class="string">32M;</span></span><br></pre></td></tr></table></figure>

<p>這行就好，然後重啟 Nginx 容器。</p>
<h3 id="CDN-與-wp-content-的轉址"><a href="#CDN-與-wp-content-的轉址" class="headerlink" title="CDN 與 wp-content 的轉址"></a>CDN 與 wp-content 的轉址</h3><p>這部分是參考 <a href="https://crlab.io/339">CR 研究室的文章</a> 來設定，所以有很多相似之處。</p>
<p>基本上就是對原本的 wp-content&#x2F;uploads 做 HTTP 301，然後再建一個同 root 的但是不同 Domain 的 Virtual Host，並且把 .php 用 HTTP 403 擋光光。</p>
<p>這邊 CDN 使用 Cloudflare，所以除了記得要好好設定 <a href="https://blog.nesquate.tw/2022/05/15/%e8%a8%ad%e5%ae%9a-cloudflare-%e5%b0%8e%e8%87%b4%e7%80%8f%e8%a6%bd%e5%99%a8%e5%87%ba%e7%8f%be%e3%80%8cerr_too_many_redirects%e3%80%8d%e7%9a%84%e9%8c%af%e8%aa%a4/">SSL 驗證模式</a>之外，還要設定 Page Rule：</p>
<p><img src="/post_image/%E8%9E%A2%E5%B9%95%E6%93%B7%E5%8F%96%E7%95%AB%E9%9D%A2-2023-03-31-152104.png" alt="Cloudflare-Image-Cache-PageRule"></p>
<p>然後設定 Nginx，舉本站為例子：</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">server</span> <span class="string">&#123; # WordPress</span></span><br><span class="line"><span class="attr">client_max_body_size</span> <span class="string">32M;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># Listen to port 443 on both IPv4 and IPv6.</span></span><br><span class="line"><span class="attr">listen</span> <span class="string">443 ssl;</span></span><br><span class="line"><span class="attr">listen</span> <span class="string">[::]:443 ssl;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># Domain names this server should respond to.</span></span><br><span class="line"><span class="attr">server_name</span> <span class="string">blog.nesquate.tw;</span></span><br><span class="line"><span class="attr">root</span> <span class="string">/websites/wordpress;</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">......</span></span><br><span class="line">    </span><br><span class="line"><span class="attr">location</span> <span class="string">~ /wp-content/uploads/(?&lt;media&gt;.+) &#123; # Redirect to CDN</span></span><br><span class="line">          <span class="attr">return</span> <span class="string">301 https://cdn-blog.nesquate.tw/wp-content/uploads/$media;</span></span><br><span class="line">  <span class="attr">&#125;</span></span><br><span class="line">     </span><br><span class="line">        <span class="attr">......</span></span><br><span class="line"></span><br><span class="line"><span class="attr">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">server</span> <span class="string">&#123; # WordPress-CDN</span></span><br><span class="line"><span class="attr">client_max_body_size</span> <span class="string">32M;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># Listen to port 443 on both IPv4 and IPv6.</span></span><br><span class="line"><span class="attr">listen</span> <span class="string">443 ssl;</span></span><br><span class="line"><span class="attr">listen</span> <span class="string">[::]:443 ssl;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># Domain names this server should respond to.</span></span><br><span class="line"><span class="attr">server_name</span> <span class="string">cdn-blog.nesquate.tw;</span></span><br><span class="line"><span class="attr">root</span> <span class="string">/websites/wordpress;</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">......</span></span><br><span class="line"> </span><br><span class="line"><span class="attr">location</span> <span class="string">~ [^/]\.php(/$) &#123; # No php excute</span></span><br><span class="line">          <span class="attr">return</span> <span class="string">403;</span></span><br><span class="line">  <span class="attr">&#125;</span></span><br><span class="line"><span class="attr">&#125;</span></span><br></pre></td></tr></table></figure>

<p>個人建議 HTTP 301 的 location 區段要放在其他 location 區段的最上面，否則重新導向可能會無法正常運作。</p>
<p>最後關於 CR 研究室那邊提到的 CDN Enabler，因為該外掛改動滿大的，這邊截個圖說明一下：</p>
<p><img src="/post_image/%E8%9E%A2%E5%B9%95%E6%93%B7%E5%8F%96%E7%95%AB%E9%9D%A2-2023-03-31-153050.png" alt="CDN-Enabler-New"></p>
<p>「CDN 包含項目」可以不用動，不過「CDN 排除項目」預設為空，這邊建議排除以下項目：</p>
<ul>
<li>所有 PHP 檔案 (.*php)</li>
<li>wp-includes&#x2F; (我沒有要快取整個網站)</li>
<li>wp-admin&#x2F; (理由同上)</li>
<li>wp-content&#x2F;themes (有些佈景主題會設 <a href="https://developer.mozilla.org/zh-TW/docs/Web/HTTP/CORS">CORS</a> 的限制，基本上是<a href="https://developer.mozilla.org/zh-TW/docs/Web/Security/Same-origin_policy">同源政策</a>，這時候不排除掉瀏覽器 Console 會跑出很多錯誤，PageSpeed Test 也會跟你說)</li>
<li>wp-content&#x2F;plugins (理由同上，有些外掛也會有這問題)</li>
<li>wp-content&#x2F;cache (「快取你的快取」很不 OK)</li>
</ul>
<p>設定好之後，基本上你上傳到媒體庫的圖片都會被轉址到 CDN，且被 CDN 快取。</p>
<h3 id="小結"><a href="#小結" class="headerlink" title="小結"></a>小結</h3><p>很久沒有摸 VPS 了，這次摸了一下並把架設 WordPress 當作練習。</p>
<p>有些問題印象中過去並沒有碰到過，可能是因為 WordPress 官方 Image 的 Apache + Wordpress Image 包得好好的原因吧，這就不太清楚了。</p>
<p>架設好網站只是開始，後面還有很多東西要調整，例如 Nginx 的瀏覽器快取設定等。</p>
]]></content>
      <categories>
        <category>架站相關</category>
      </categories>
      <tags>
        <tag>MariaDB</tag>
        <tag>Nginx</tag>
        <tag>VPS</tag>
        <tag>WordPress</tag>
      </tags>
  </entry>
  <entry>
    <title>用 Dockerfile 建立最小的 FreshRSS 運行環境（PHP-FPM）</title>
    <url>/2023/04/03/%E7%94%A8-dockerfile-%E5%BB%BA%E7%AB%8B%E6%9C%80%E5%B0%8F%E7%9A%84-freshrss-%E9%81%8B%E8%A1%8C%E7%92%B0%E5%A2%83%EF%BC%88php-fpm%EF%BC%89/</url>
    <content><![CDATA[<p><a href="https://github.com/FreshRSS/FreshRSS">FreshRSS</a> 是自建 <a href="https://en.wikipedia.org/wiki/RSS">RSS</a> 訂閱蒐集網站的軟體，類似於 <a href="https://feedly.com/">Feedly</a>。 </p>
<p>最近會需要 RSS 的原因是社群網站越看越焦慮。雖然演算法會提供新奇的東西或文章給我看，不過我現在一來覺得社群網站的演算法，比起幫助人們找到與自己興趣相同的東西，更容易造成_集體焦慮_，於是我要設法找出突破集體焦慮的破口；另外一方面，我認為<strong>社群網站早已摧毀了人們閱讀長文、進一步思辨的能力</strong>（更好笑的是<a href="https://g0v.social/@Nesquate/109804722780930842">這些人還會去指責另外一個平台</a>），覺得繼續這樣下去不行，於是<a href="https://blog.nesquate.tw/2023/03/30/%e4%bd%b5%e7%ab%99%e5%91%8a%e7%9f%a5/">自己開始整理過去所架設的部落格以及文章</a>，並重新開始執筆部落格，同樣的 RSS 也被我撿回來用。 </p>
<p>儘管 Blog 和 RSS 是老東西，且接收的消息可能沒有社群網站這麼廣泛，但我知道現在的自己需要慢下來，且專注在我想要的東西上。 </p>
<p>話題扯遠，來討論一下 FreshRSS 本身。 </p>
<p><a href="https://github.com/FreshRSS/FreshRSS/tree/edge/Docker">FreshRSS 本身有提供 Docker Image</a>，但無論是 Debian Image 還是 Alpine Image，**兩個都包含了 <a href="https://httpd.apache.org/">Apache HTTP Server</a>**，由於自己已經<a href="https://blog.nesquate.tw/2023/03/31/%e7%94%a8-docker-%e6%9e%b6-nginx-wordpress-php-fpm-mariadb-cdn-%e7%9a%84%e8%a8%98%e9%8c%84/">有還會幫我自簽 Let’s Encrypt TLS 憑證的 Nginx 容器</a>，因此根本就不需要再多一個 HTTP Server（更何況我已經不想要再搞 Reverse Proxy），於是決定自己搞一個 Docker Image。 </p>
<p>翻閱 Docker 上的 <a href="https://hub.docker.com/_/php">PHP Image 頁面</a>，以及 <a href="https://docs.docker.com/engine/reference/builder/">Dockerfile 說明文件</a>之後，寫出以下 Dockerfile：</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">FROM</span> php:fpm-alpine3.<span class="number">17</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">ENV</span> freshrss_url=<span class="string">&quot;https://github.com/FreshRSS/FreshRSS/archive/refs/tags/1.21.0.zip&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">RUN</span> apk add --no-cache \</span><br><span class="line">        <span class="attribute">zip</span> libzip-dev curl-dev libxml2-dev sqlite-dev postgresql-dev gmp-dev --virtual .buildeps\</span><br><span class="line">    &amp;&amp; <span class="attribute">docker</span>-php-ext-install -j <span class="string">&quot;$(nproc)&quot;</span> \</span><br><span class="line">        <span class="attribute">pdo_mysql</span> \</span><br><span class="line">        <span class="attribute">pdo_sqlite</span> \</span><br><span class="line">        <span class="attribute">pdo_pgsql</span> \</span><br><span class="line">        <span class="attribute">gmp</span> \</span><br><span class="line">        <span class="attribute">intl</span> \</span><br><span class="line">        <span class="attribute">zip</span> \</span><br><span class="line">    &amp;&amp; <span class="attribute">apk</span> del --purge .buildeps \</span><br><span class="line">    &amp;&amp; <span class="attribute">apk</span> add --no-cache gmp-dev icu-dev libpq-dev libzip</span><br><span class="line"></span><br><span class="line"><span class="attribute">RUN</span> curl -o freshrss.zip -L <span class="variable">$&#123;freshrss_url&#125;</span> \</span><br><span class="line">    &amp;&amp; <span class="attribute">unzip</span> freshrss.zip -d /var/www/html  \</span><br><span class="line">    &amp;&amp; <span class="attribute">mv</span> /var/www/html/FreshRSS-<span class="number">1</span>.<span class="number">21</span>.<span class="number">0</span>/* /var/www/html \</span><br><span class="line">    &amp;&amp; <span class="attribute">rm</span> -r /var/www/html/FreshRSS-<span class="number">1</span>.<span class="number">21</span>.<span class="number">0</span> \</span><br><span class="line">    &amp;&amp; <span class="attribute">rm</span> freshrss.zip</span><br><span class="line"></span><br><span class="line"><span class="attribute">CMD</span><span class="meta"> [ &quot;php-fpm&quot; ]</span></span><br></pre></td></tr></table></figure>

<p>這些內容目前還只能算是雛型，因為我後來發現掛載 &#x2F;var&#x2F;www&#x2F;html 之後會把原本的東西給蓋掉。 </p>
<p>至於 apk 安裝移除以及依賴的部份，第一次安裝是負責安裝編譯的依賴，因為 docker-php-ext-install 會需要編譯 PHP 模組；至於第二次安裝則是安裝運行 PHP 模組所需要的依賴，在 Try &amp; Error 的過程中會提示缺少的檔案，把檔名拿去 <a href="https://pkgs.alpinelinux.org/packages">Alpine Linux packages 網頁</a>去搜尋就好。 </p>
<p>用此 Dockerfile 產出的 Image 大概為 107 MB，也算夠小了。 Dockerfile 做完之後就可以寫 docker-compose.yml、Nginx 的 site.conf 了…。</p>
]]></content>
      <categories>
        <category>架站相關</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>docker-php-ext</tag>
        <tag>Dockerfile</tag>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title>與 Vista 重新見面</title>
    <url>/2022/05/12/%E8%88%87-vista-%E9%87%8D%E6%96%B0%E8%A6%8B%E9%9D%A2/</url>
    <content><![CDATA[<p><img src="/post_image/2022/vista-re-see/image-01.png"></p>
<p>目前的進度，如果可以我還是希望能夠把整套 Windows Live Wave 2 找過來…</p>
<p>跟同學討論到 Windows Aero 的時候剛好提到 Windows Vista，沒想到不是只有我一個人覺得 Windows 7 與 Windows Vista 的 Aero 整體感覺很不一樣…。</p>
<p>於是想說趁著自己還沒入睡之前，把 Vista 裝起來玩玩，不過光是找 ISO 檔案就差點碰壁了 (還好還有<a href="https://forums.mydigitallife.net/">萬能的 MDL Forum</a> 找得到)，找繁體中文台灣語言包也是一大難題，因為當時的政治環境使得原本有台灣的語言包在 Windows Update 上被迫下架，中國真是好樣的&#x3D; &#x3D;</p>
<p>剛裝好 Vista 其實不知道現在的 Vista 可以裝什麼，我差點以為 VMware 的驅動程式會因為沒有 SHA-2 更新包而不能裝，還好還可以。後來想到 <a href="https://escargot.chat/">Escargot</a> 這個把 MSN、Yahoo 即時通等老人服務叫回來的專案，就把 MSN 8.5 找回來當作應景之物。</p>
<p>在寫文的當下我又想到還有 Office 2007 可以裝，這樣整套裝下來應該就有當年在用 Vista 時的感覺了吧？我沒有經歷過，說實在的我還滿難過的，錯過了一個短暫的時代。</p>
]]></content>
      <categories>
        <category>個人想法</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>Vista</tag>
      </tags>
  </entry>
  <entry>
    <title>設定 Cloudflare 導致瀏覽器出現「ERR_TOO_MANY_REDIRECTS」的錯誤</title>
    <url>/2022/05/15/%E8%A8%AD%E5%AE%9A-cloudflare-%E5%B0%8E%E8%87%B4%E7%80%8F%E8%A6%BD%E5%99%A8%E5%87%BA%E7%8F%BE%E3%80%8Cerr-too-many-redirects%E3%80%8D%E7%9A%84%E9%8C%AF%E8%AA%A4/</url>
    <content><![CDATA[<p><img src="/post_image/2022/cloudflare-ERR_TOO_MANY_REDIRECTS/image-01.png"></p>
<p>都自己用 VPS 架設 WordPress 部落格了，VPS 的流量也算是寸土寸金等級的 (如果流量爆掉的話)，遲早上一下 CDN 以避免流量爆炸。</p>
<p>只是很奇怪，在 Cloudflare 開啟後台 Proxy 之後，Chrome 直接噴「ERR_TOO_MANY_REDIRECTS」後就不給我瀏覽，架站設定初期還不知道這是什麼原因，所以之前是直接關掉 CDN 的。</p>
<p>但總不能一直關掉然後搞到流量爆炸吧，所以稍微認真去爬文一下，才在<a href="https://gist.github.com/lopezjurip/5314252970cc94970058320ac78f490a">一篇 GitHub Gist 上</a>看到原來需要調整 Cloudflare 的設定……。 <span id="more"></span> 爬了文後發現，以 Cloudflare 的預設模式 (彈性) 來說，會在伺服器端連線到 HTTP (Port 80)，而訪客瀏覽則是由 Cloudflare 提供的 HTTPS (Port 443) 連線，但是因為 Caddy Server 這邊早就對 HTTP 做重定向 (Redirect) 了，所以 Cloudflare 連線到伺服器的那方就會連不到 HTTP，就變成無限重定向了。</p>
<p><img src="/post_image/2022/cloudflare-ERR_TOO_MANY_REDIRECTS/image-02.png"></p>
<p>如同<a href="https://caddy.community/t/cloudflare-infinite-redirect-err-too-many-redirects/14192/3">這篇文</a>說到的結果，但當時我對於到底該怎麼設定還是沒概念XD</p>
<p>所以如果確定伺服器有提供完整的 HTTPS，那就要改成「完整」或是「完整 (嚴格)」。</p>
<p>在撰文的同時，我想起來其實以前在自架 WordPress + Cloudflare (那時候還是 Shared Hosting) 我明明有注意到這點，但怎麼在這時候忘記了呢？而且明明之前用 yinyin.dev 也沒出現過這種問……。</p>
<p>啊對欸，.dev 網域強制 HSTS，Cloudflare 那邊就算是彈性的策略也會受到 HSTS 影響，難怪之前沒遇到Orz</p>
]]></content>
      <categories>
        <category>架站相關</category>
      </categories>
      <tags>
        <tag>CDN</tag>
        <tag>Cloudflare</tag>
      </tags>
  </entry>
  <entry>
    <title>讓 XZP 解放(?) Pie 9.0 中的一些功能 (Magisk)</title>
    <url>/2018/11/19/%E8%B3%87%E6%BA%90-%E8%AE%93-xzp-%E8%A7%A3%E6%94%BE-pie-9-0-%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E5%8A%9F%E8%83%BD-magisk/</url>
    <content><![CDATA[<h3 id="嗯？"><a href="#嗯？" class="headerlink" title="嗯？"></a>嗯？</h3><p>大概2018年11月初吧，XZP正式收到Pie 9.0的更新。除了Android Pie的所有功能之外，Sony似乎也放棄了相機需要DRM的情況，於是已解鎖的XZP也就不需要DRM FIX Patcher了，可喜可賀，可喜可賀。</p>
<p>不過老實說，個人認為XZP的Pie 9.0好像還少了什麼東西……。</p>
<h3 id="少掉的東西？"><a href="#少掉的東西？" class="headerlink" title="少掉的東西？"></a>少掉的東西？</h3><p>目前看來在XZP的Pie中似乎還是沒有：</p>
<ol>
<li>Night Light（夜間模式）</li>
<li>如同Pixel 3的導覽列手勢</li>
<li>VR相關選項</li>
<li>Camera2 API（我想這大概是沒救了吧……）</li>
<li>Digital Wellbeing（數位健康）</li>
</ol>
<p>前三點如果要使用的話可以安裝Magisk模組解決（Camera2 API在Sony手機真的沒救了）。</p>
<p>至於Digital Wellbeing，這塊是Google的問題。Google目前僅限在Pixel&#x2F;Android One機種中開放Digital Wellbeing的功能，雖然說可以自己下載Apk再透過Pixel Shortcuts建立捷徑來使用，不過計時限制、灰階畫面及排程功能無法使用（會閃退）。若要克服這個問題，就需要使用Magisk模組。</p>
<h3 id="Pix3lify"><a href="#Pix3lify" class="headerlink" title="Pix3lify"></a>Pix3lify</h3><p>原本叫做「Pixel Experience」，到後面就改名了，害我差點以為這玩意消失了……。</p>
<p>這個Magisk模組裝下去之後，夜間模式、VR相關選項都會出現，位置在「設定→顯示」當中。夜間模式可以正常使用。</p>
<p><img src="/post_image/2018/11/Screenshot_20181119-191522-169x300.png"></p>
<p>在「顯示」設定中的兩個選項</p>
<h3 id="Lawnstep"><a href="#Lawnstep" class="headerlink" title="Lawnstep"></a>Lawnstep</h3><p>這模組可以在XZP實現Pixel 3的導覽列手勢，不過安裝此模組之前要先安裝<a href="https://www.apkmirror.com/apk/deletescape/lawnchair/">Lawnchair v2</a>，注意是v2不是v1。Play商店上的是v1不是v2，<strong>v2沒有在Play商店中上架。</strong></p>
<p>安裝好Lawnchair v2之後記得<strong>先將它設為預設主畫面</strong>後再安裝Lawnstep，這樣重新開機之後應該就會看到導覽列手勢了。</p>
<p>沒有設為預設或是不是用v2會發生什麼事？就跑不出來而已……。</p>
<p>Lawnstep的相關設定可以在Lawnchair v2的設定當中找到。</p>
<h3 id="Digital-Wellbeing-Enabler"><a href="#Digital-Wellbeing-Enabler" class="headerlink" title="Digital Wellbeing Enabler"></a>Digital Wellbeing Enabler</h3><p>這個模組沒有在Magisk中上架，<a href="https://androidfilehost.com/?a=show&w=files&flid=280229">需要自己下載</a>。</p>
<p>進入上面的連結，找到Wellbeing開頭的檔案下載下來就對了（我是下載Wellbeing@PH1_1.1.1.zip）</p>
<p>這模組原本是設計給Essential Phone使用，後來經過測試之後發現OnePlus也行。個人是秉持著不試白不試的心態測試，結果發現XZP一樣也可以使用。</p>
<p>雖然模組內已經有Digital Wellbeing的Apk，不過建議在安裝之前&#x2F;之後<a href="https://www.apkmirror.com/apk/google-inc/digital-wellbeing/">下載最新版</a>。</p>
<p>要進入數位健康的話，點開設定App就會看到「數位健康」的選項了。</p>
<p><img src="/post_image/2018/11/Screenshot_20181119-184115-169x300.png"></p>
<p>計時功能正常使用</p>
<p><em>如果要非Root的方法，可以參考<a href="https://www.dcard.tw/f/3c/p/230067811">Dcard上的文章</a>。</em></p>
<h3 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h3><p>透過Magisk的模組，算是補齊了一些原本在9.0應該要有的元素，而且不用手動修改系統文件，模組裝下去就可以直接使用，算是省下了不少時間。</p>
]]></content>
      <categories>
        <category>系統維運</category>
      </categories>
  </entry>
  <entry>
    <title>Logitech G102 Prodigy</title>
    <url>/2018/11/10/%E9%96%8B%E7%AE%B1-logitech-g102-prodigy/</url>
    <content><![CDATA[<p>我上一 隻滑鼠是Logitech G90（是不是2017年版已經不太清楚了），是一年前買的，由於打osu!的時候會爆氣摔滑鼠（你就知道這遊戲會使EQ大幅下滑…），摔到左鍵的微動開關有點狀況。  </p>
<p>因為該狀況已經影響到正常使用了，尤其是按著選取文字或是拖曳物件時，明明還按著可是它卻放開了，加上自己又不會換微動開關（學過焊接的人真好QQ），只好買新的滑鼠來用。  </p>
<p>由於osu圈滿多人推薦G102這隻滑鼠，加上在購入的前一天知道G102可以把設定寫入到滑鼠內（真‧Linux使用者救星），所以我就把它買下來了，YA(?)  </p>
<p>以下就開始開箱文正文囉XD  </p>
<h3 id="內容物"><a href="#內容物" class="headerlink" title="內容物"></a>內容物</h3><p>首先是包裝和內容物。包裝和G90的很像（G90我沒留盒子所以沒辦法直接拿出來比較），而內容物……就很簡單的滑鼠本體和聲明紙條。  </p>
<p><img src="/post_image/2018/11/DSC_0002-169x300.jpg"></p>
<p><img src="/post_image/2018/11/DSC_0003-300x169.jpg"></p>
<p>滑鼠本體的話，比起G90，G102在左側多了兩顆按鍵可以設定，預設是前進後退；而中間則跟G90一樣有DPI切換鍵。這些按鍵都可以在LGS自訂。  </p>
<p><img src="/post_image/2018/11/DSC_0004-169x300.jpg"></p>
<p><img src="/post_image/2018/11/DSC_0005-300x169.jpg"></p>
<p>下圖為G102(左) vs. G90(右)。G102有RGB效果ㄟ（看來我也進入的光害時代了嗎XD？）  </p>
<p><img src="/post_image/2018/11/DSC_0006-300x169.jpg"></p>
<h3 id="LGS"><a href="#LGS" class="headerlink" title="LGS"></a>LGS</h3><p>因為裝G90的時候就裝過LGS了，所以不用另外重新安裝它也抓得到G102。</p>
<p>一點進去就看到可以「內建記憶體」這五個字，這就是我要ㄉ滑鼠！</p>
<p><img src="/post_image/2018/11/Image-2B1-300x224.png"></p>
<p>如果要用遊戲設定檔的話還是得乖乖切回去。</p>
<p>DPI設定一樣，最多五段，不過最大DPI可以來到8000，看來我可以練純鼠了？！</p>
<p>回報速度最大也來到1000。</p>
<p><img src="/post_image/2018/11/Image-2B2-300x224.png"></p>
<p>燈號功能其實不是我選擇它的主要原因……雖然看起來滿炫炮的。</p>
<p>不過有了燈號功能之後，Discord與Logitech RGB的整合項目就有用了。</p>
<p><img src="/post_image/2018/11/Image-2B3-300x224.png"></p>
<p>這功能可以關掉，也可以固定顏色、彩色循環和呼吸效果，個人比較偏好呼吸效果。</p>
<p><img src="/post_image/2018/11/Image-2B4.png"></p>
<p>輸入分析的功能有待研究，可能我會用不到。</p>
<p>試用了一下感覺就只是記錄按鍵按下次數的多寡這樣。</p>
<p><img src="/post_image/2018/11/Image-2B5-300x224.png"></p>
<p><em>好了，以上就是G102的開箱，至於實際使用如何，就等我用一段時間再說說吧！</em></p>
]]></content>
      <categories>
        <category>個人想法</category>
      </categories>
  </entry>
</search>
